{
  "version": 3,
  "sources": ["../bundle-b1xAcf/checked-fetch.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../../../../.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/modules-watch-stub.js", "../../../worker-modules/src/config.js", "../../../worker-modules/src/utils.js", "../../../worker-modules/src/paper-scoring.js", "../../../worker-modules/src/blog-generator.js", "../../../worker-modules/src/templates.js", "../bundle-b1xAcf/middleware-loader.entry.ts", "../bundle-b1xAcf/middleware-insertion-facade.js", "../../../worker-modules/functions/worker.js", "../../../worker-modules/src/handlers.js", "../../../worker-modules/src/paper-scraper.js", "../../../worker-modules/src/paper-analyzer.js", "../../../worker-modules/src/dual-column-templates.js", "../../../../../../.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/zhouql1978/dev/paperdog/target/.wrangler/tmp/dev-2OW12B",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "// Configuration constants for PaperDog Blog\nexport const corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type',\n};\n\n// Custom Error Class\nexport class AppError extends Error {\n  constructor(message, statusCode = 500) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n\n// Route Configuration\nexport const routes = {\n  'GET /': 'handleRoot',\n  'GET /api/papers': 'handlePapersList',\n  'GET /api/papers/:date': 'handlePapersByDate',\n  'GET /api/papers/:id': 'handlePaperById',\n  'POST /api/update': 'handleUpdatePapers',\n  'GET /api/categories': 'handleCategories',\n  'GET /api/search': 'handleSearch',\n  'GET /feed': 'handleRSSFeed',\n  'GET /about': 'handleAbout',\n  'GET /api/scoring/:date': 'handleScoringReport',\n};\n\n// Paper sources configuration\nexport const PAPER_SOURCES = {\n  arxiv: {\n    baseUrl: 'http://export.arxiv.org/api/query',\n    categories: ['cs.CV', 'cs.AI', 'cs.LG', 'cs.CL', 'cs.RO'],\n    maxResults: 50,\n    sortBy: 'submittedDate',\n    sortOrder: 'descending'\n  },\n  huggingface: {\n    baseUrl: 'https://huggingface.co/api/papers',\n    categories: ['computer-vision', 'natural-language-processing', 'machine-learning'],\n    maxResults: 30\n  }\n};\n\n// Topic categories for AI/ML papers\nexport const TOPIC_CATEGORIES = [\n  'computer_vision',\n  'machine_learning', \n  'natural_language_processing',\n  'reinforcement_learning',\n  'multimodal_learning',\n  'generative_models',\n  'diffusion_models',\n  'transformer_architectures',\n  'optimization',\n  'robotics',\n  'ethics_ai',\n  'datasets'\n];\n\n// Source-specific scraping configurations\nexport const SOURCE_CONFIGS = {\n  arxiv: {\n    maxPapersPerRequest: 50,\n    requestDelay: 1000,\n    retryAttempts: 3,\n    dateRange: 1, // Last 1 day\n    fields: 'id,title,summary,authors,published,updated,primary_category'\n  },\n  huggingface: {\n    maxPapersPerRequest: 30,\n    requestDelay: 2000,\n    retryAttempts: 3,\n    dateRange: 1,\n    fields: 'title,summary,authors,published,id,arxiv_id,tags'\n  }\n};\n\n// Model configuration for paper analysis\nexport const MODEL_CONFIG = {\n  analysis: 'openai/gpt-4o-mini',\n  summary: 'google/gemini-2.0-flash-001',\n  translation: 'google/gemini-2.0-flash-001'\n};\n\nexport const MODEL_PARAMS = {\n  analysis: {\n    temperature: 0.3,\n    max_tokens: 2000\n  },\n  summary: {\n    temperature: 0.3,\n    max_tokens: 500\n  },\n  translation: {\n    temperature: 0.5,\n    max_tokens: 800\n  }\n};\n\n// Paper analysis prompt template\nexport const PAPER_ANALYSIS_PROMPT = `You are an expert AI researcher specializing in computer vision and machine learning. \n\nAnalyze this research paper and provide a structured analysis:\n\n**Paper Title:** {title}\n**Authors:** {authors}\n**Abstract:** {abstract}\n**Published:** {published}\n\nPlease provide a comprehensive analysis covering:\n\n1. **Introduction & Background (50-100 words)**\n   - Research context and motivation\n   - Problem being addressed\n\n2. **Key Challenges (50-100 words)**\n   - Main technical challenges\n   - Limitations of existing approaches\n\n3. **Innovations & Contributions (100-150 words)**\n   - Novel methods or techniques\n   - Key technical contributions\n   - Theoretical or practical innovations\n\n4. **Experiments & Results (100-150 words)**\n   - Experimental setup\n   - Key results and metrics\n   - Comparison with baselines\n\n5. **Insights & Future Directions (50-100 words)**\n   - Implications for the field\n   - Potential applications\n   - Future research directions\n\n6. **Keywords (5-8 terms)**\n   - Extract key technical terms\n   - Include methods, datasets, metrics\n\n**Format your response as a valid JSON object:**\n{\n  \"introduction\": \"text...\",\n  \"challenges\": \"text...\",\n  \"innovations\": \"text...\", \n  \"experiments\": \"text...\",\n  \"insights\": \"text...\",\n  \"keywords\": [\"term1\", \"term2\", ...],\n  \"category\": \"one_of_topic_categories\",\n  \"relevance_score\": (1-10),\n  \"technical_depth\": \"beginner|intermediate|advanced\"\n}`;\n\n// RSS feed configuration\nexport const RSS_CONFIG = {\n  title: 'PaperDog - AI Papers Daily',\n  description: 'Daily curated AI and computer vision research papers',\n  language: 'en',\n  maxItems: 20\n};", "import { AppError } from './config.js';\n\n// Utility functions for PaperDog Blog\n\nexport async function fetchWithTimeout(url, timeout = 10000) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\n  \n  try {\n    const response = await fetch(url, {\n      signal: controller.signal,\n      headers: {\n        'User-Agent': 'PaperDog-Bot/1.0 (https://paperdog.org)',\n        'Accept': 'application/xml,application/json,text/html'\n      }\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response;\n  } catch (error) {\n    clearTimeout(timeoutId);\n    if (error.name === 'AbortError') {\n      throw new AppError(`Request timeout after ${timeout}ms`);\n    }\n    throw error;\n  }\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function generatePaperId(paper) {\n  const timestamp = Date.now();\n  const titleSlug = paper.title.toLowerCase()\n    .replace(/[^a-z0-9\\s-]/g, '')\n    .replace(/\\s+/g, '-')\n    .substring(0, 50);\n  \n  return `${paper.source}_${titleSlug}_${timestamp}`;\n}\n\nexport function validateDate(dateString) {\n  const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\n  if (!regex.test(dateString)) {\n    throw new AppError('Invalid date format. Use YYYY-MM-DD');\n  }\n  \n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) {\n    throw new AppError('Invalid date');\n  }\n  \n  return true;\n}\n\nexport function formatDate(dateString) {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n}\n\nexport function truncateText(text, maxLength = 200) {\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength).trim() + '...';\n}\n\nexport function extractKeywords(text, maxKeywords = 8) {\n  // Simple keyword extraction - in production, use more sophisticated NLP\n  const commonWords = new Set([\n    'the', 'is', 'at', 'which', 'on', 'a', 'an', 'and', 'or', 'but', 'in', 'with',\n    'we', 'our', 'this', 'that', 'these', 'those', 'are', 'be', 'have', 'has',\n    'been', 'from', 'for', 'not', 'as', 'by', 'it', 'of', 'to', 'can', 'will'\n  ]);\n  \n  const words = text.toLowerCase()\n    .replace(/[^\\w\\s]/g, ' ')\n    .split(/\\s+/)\n    .filter(word => word.length > 3 && !commonWords.has(word));\n  \n  const wordFreq = {};\n  words.forEach(word => {\n    wordFreq[word] = (wordFreq[word] || 0) + 1;\n  });\n  \n  return Object.entries(wordFreq)\n    .sort(([,a], [,b]) => b - a)\n    .slice(0, maxKeywords)\n    .map(([word]) => word);\n}\n\nexport function jsonResponse(data, status = 200) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders\n    }\n  });\n}\n\nexport function htmlResponse(html, status = 200) {\n  return new Response(html, {\n    status,\n    headers: {\n      'Content-Type': 'text/html; charset=utf-8',\n      ...corsHeaders\n    }\n  });\n}\n\nexport function rssResponse(xml, status = 200) {\n  return new Response(xml, {\n    status,\n    headers: {\n      'Content-Type': 'application/rss+xml; charset=utf-8',\n      ...corsHeaders\n    }\n  });\n}\n\nexport function errorResponse(message, status = 500) {\n  return jsonResponse({ error: message }, status);\n}\n\nexport async function getCachedPapers(date, env) {\n  try {\n    const cached = await env.PAPERS.get(`papers_${date}`);\n    if (cached) {\n      return JSON.parse(cached);\n    }\n  } catch (error) {\n    console.error('Error reading from cache:', error);\n  }\n  return null;\n}\n\nexport async function cachePapers(date, papers, env) {\n  try {\n    const ttl = 24 * 60 * 60; // 24 hours in seconds\n    await env.PAPERS.put(`papers_${date}`, JSON.stringify(papers), {\n      expirationTtl: ttl\n    });\n    console.log(`Cached ${papers.length} papers for date ${date}`);\n  } catch (error) {\n    console.error('Error writing to cache:', error);\n  }\n}\n\nexport async function getCachedPaper(paperId, env) {\n  try {\n    const cached = await env.PAPERS.get(`paper_${paperId}`);\n    if (cached) {\n      return JSON.parse(cached);\n    }\n  } catch (error) {\n    console.error('Error reading paper from cache:', error);\n  }\n  return null;\n}\n\nexport async function cachePaper(paperId, paper, env) {\n  try {\n    const ttl = 7 * 24 * 60 * 60; // 7 days in seconds\n    await env.PAPERS.put(`paper_${paperId}`, JSON.stringify(paper), {\n      expirationTtl: ttl\n    });\n  } catch (error) {\n    console.error('Error caching paper:', error);\n  }\n}\n\nexport function validatePaper(paper) {\n  if (!paper.title || paper.title.trim().length < 10) {\n    throw new AppError('Paper title is required and must be at least 10 characters');\n  }\n  \n  if (!paper.abstract || paper.abstract.trim().length < 50) {\n    throw new AppError('Paper abstract is required and must be at least 50 characters');\n  }\n  \n  if (!paper.authors || !Array.isArray(paper.authors) || paper.authors.length === 0) {\n    throw new AppError('Paper must have at least one author');\n  }\n  \n  return true;\n}\n\nexport function filterPapersByCategory(papers, category) {\n  if (!category) return papers;\n  \n  return papers.filter(paper => \n    paper.category?.toLowerCase() === category.toLowerCase() ||\n    paper.analysis?.category?.toLowerCase() === category.toLowerCase()\n  );\n}\n\nexport function searchPapers(papers, query) {\n  if (!query) return papers;\n  \n  const searchTerms = query.toLowerCase().split(' ').filter(term => term.length > 2);\n  \n  return papers.filter(paper => {\n    const searchableText = [\n      paper.title,\n      paper.abstract,\n      ...(paper.authors || []),\n      ...(paper.analysis?.keywords || [])\n    ].join(' ').toLowerCase();\n    \n    return searchTerms.every(term => searchableText.includes(term));\n  });\n}\n\nexport function sortPapersByDate(papers, order = 'desc') {\n  return [...papers].sort((a, b) => {\n    const dateA = new Date(a.published || a.scraped_at);\n    const dateB = new Date(b.published || b.scraped_at);\n    return order === 'desc' ? dateB - dateA : dateA - dateB;\n  });\n}\n\nexport const corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type',\n};", "// Enhanced Paper Scoring System\n// \u57FA\u4E8E\u591A\u56E0\u7D20\u7684\u8BBA\u6587\u8BC4\u5206\u7CFB\u7EDF\uFF0C\u53C2\u8003Source\u76EE\u5F55\u7684\u8BC4\u5206\u6A21\u5F0F\n\nimport { AppError } from './config.js';\n\nconst logger = {\n  info: (msg, data = {}) => console.log(`[SCORING] ${msg}`, data),\n  debug: (msg, data = {}) => console.log(`[SCORING] ${msg}`, data),\n  warn: (msg, data = {}) => console.warn(`[SCORING] ${msg}`, data),\n  error: (msg, data = {}) => console.error(`[SCORING] ${msg}`, data)\n};\n\n// \u8BC4\u5206\u6743\u91CD\u914D\u7F6E\nconst SCORING_WEIGHTS = {\n  recency: 0.3,        // \u65B0\u9C9C\u5EA6\u6743\u91CD\n  relevance: 0.4,      // AI\u76F8\u5173\u6027\u6743\u91CD\n  popularity: 0.2,     // \u6D41\u884C\u5EA6\u6743\u91CD\n  quality: 0.1         // \u8D28\u91CF\u6743\u91CD\n};\n\n// \u65B0\u9C9C\u5EA6\u8BC4\u5206\u8BA1\u7B97\nexport function calculateRecencyScore(publishedDate) {\n  try {\n    const now = new Date();\n    const publishTime = new Date(publishedDate);\n    const daysAgo = Math.floor((now - publishTime) / (1000 * 60 * 60 * 24));\n    \n    // \u65B0\u9C9C\u5EA6\u8BC4\u5206\uFF1A\u5F53\u5929\u53D1\u5E0310\u5206\uFF0C\u6BCF\u5929\u9012\u51CF1\u5206\uFF0C\u6700\u4F4E1\u5206\n    let score = Math.max(1, 10 - daysAgo);\n    \n    // \u989D\u5916\u5956\u52B1\uFF1A7\u5929\u5185\u53D1\u5E03\u7684\u8BBA\u6587\u83B7\u5F97\u989D\u5916\u52A0\u5206\n    if (daysAgo <= 7) {\n      score += 2;\n    } else if (daysAgo <= 30) {\n      score += 1;\n    }\n    \n    return Math.min(10, score);\n  } catch (error) {\n    logger.warn('Failed to calculate recency score:', error);\n    return 5; // \u9ED8\u8BA4\u5206\u6570\n  }\n}\n\n// AI\u76F8\u5173\u6027\u8BC4\u5206\uFF08\u57FA\u4E8E\u8BBA\u6587\u5206\u6790\u7ED3\u679C\uFF09\nexport function calculateRelevanceScore(paper) {\n  try {\n    let score = 5; // \u57FA\u7840\u5206\u6570\n    \n    // \u57FA\u4E8E\u5206\u6790\u7ED3\u679C\u7684\u76F8\u5173\u6027\u8BC4\u5206\n    if (paper.analysis) {\n      const analysis = paper.analysis;\n      \n      // \u57FA\u4E8EAI\u6A21\u578B\u7ED9\u51FA\u7684\u76F8\u5173\u6027\u8BC4\u5206\n      if (analysis.relevance_score) {\n        score = analysis.relevance_score;\n      }\n      \n      // \u57FA\u4E8E\u5173\u952E\u8BCD\u7684\u76F8\u5173\u6027\u52A0\u5206\n      const aiKeywords = [\n        'neural network', 'deep learning', 'machine learning', 'computer vision',\n        'natural language processing', 'transformer', 'attention', 'gpt', 'bert',\n        'diffusion model', 'generative ai', 'reinforcement learning', 'llm',\n        'multimodal', 'vision transformer', 'segmentation', 'detection'\n      ];\n      \n      const keywords = analysis.keywords || [];\n      const aiKeywordCount = keywords.filter(keyword => \n        aiKeywords.some(aiTerm => keyword.toLowerCase().includes(aiTerm))\n      ).length;\n      \n      score += aiKeywordCount * 0.5; // \u6BCF\u4E2AAI\u5173\u952E\u8BCD\u52A00.5\u5206\n      \n      // \u57FA\u4E8E\u6280\u672F\u6DF1\u5EA6\u7684\u52A0\u5206\n      if (analysis.technical_depth === 'high') {\n        score += 1;\n      } else if (analysis.technical_depth === 'medium') {\n        score += 0.5;\n      }\n    }\n    \n    // \u57FA\u4E8E\u6807\u9898\u548C\u6458\u8981\u7684\u5173\u952E\u8BCD\u5339\u914D\n    const text = `${paper.title} ${paper.abstract || ''}`.toLowerCase();\n    const highValueTerms = [\n      'breakthrough', 'state-of-the-art', 'novel', 'innovative', 'efficient',\n      'scalable', 'robust', 'accuracy', 'performance', 'optimization'\n    ];\n    \n    const termMatches = highValueTerms.filter(term => text.includes(term)).length;\n    score += termMatches * 0.3;\n    \n    return Math.min(10, Math.max(1, score));\n  } catch (error) {\n    logger.warn('Failed to calculate relevance score:', error);\n    return 5;\n  }\n}\n\n// \u6D41\u884C\u5EA6\u8BC4\u5206\uFF08\u57FA\u4E8E\u5F15\u7528\u3001\u70B9\u51FB\u7B49\u6307\u6807\uFF09\nexport function calculatePopularityScore(paper) {\n  try {\n    let score = 3; // \u57FA\u7840\u5206\u6570\n    \n    // \u57FA\u4E8E\u5F15\u7528\u6570\u7684\u8BC4\u5206\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\n    if (paper.citations && paper.citations > 0) {\n      if (paper.citations >= 100) {\n        score += 3;\n      } else if (paper.citations >= 50) {\n        score += 2;\n      } else if (paper.citations >= 10) {\n        score += 1;\n      }\n    }\n    \n    // \u57FA\u4E8E\u4F5C\u8005\u5F71\u54CD\u529B\u7684\u8BC4\u5206\n    if (paper.authors && paper.authors.length > 0) {\n      const influentialAuthors = [\n        'yoshua bengio', 'geoffrey hinton', 'yann lecun', 'andrew ng',\n        'fei-fei li', 'pieter abbeel', 'ilya sutskever', 'demis hassabis'\n      ];\n      \n      const hasInfluentialAuthor = paper.authors.some(author =>\n        influentialAuthors.some(inf => author.toLowerCase().includes(inf))\n      );\n      \n      if (hasInfluentialAuthor) {\n        score += 2;\n      }\n    }\n    \n    // \u57FA\u4E8E\u4F1A\u8BAE/\u671F\u520A\u5F71\u54CD\u529B\u7684\u8BC4\u5206\n    const topVenues = [\n      'neurips', 'icml', 'iclr', 'cvpr', 'iccv', 'eccv', 'acl', 'emnlp',\n      'nature', 'science', 'ieee transactions', 'jmlr'\n    ];\n    \n    if (paper.venue) {\n      const venueLower = paper.venue.toLowerCase();\n      const isTopVenue = topVenues.some(venue => venueLower.includes(venue));\n      \n      if (isTopVenue) {\n        score += 2;\n      }\n    }\n    \n    // \u57FA\u4E8E\u4EE3\u7801\u53EF\u7528\u6027\u7684\u52A0\u5206\n    if (paper.code_available) {\n      score += 1;\n    }\n    \n    return Math.min(10, score);\n  } catch (error) {\n    logger.warn('Failed to calculate popularity score:', error);\n    return 3;\n  }\n}\n\n// \u8D28\u91CF\u8BC4\u5206\uFF08\u57FA\u4E8E\u8BBA\u6587\u7684\u5B8C\u6574\u6027\u548C\u6280\u672F\u4EF7\u503C\uFF09\nexport function calculateQualityScore(paper) {\n  try {\n    let score = 5; // \u57FA\u7840\u5206\u6570\n    \n    // \u57FA\u4E8E\u6458\u8981\u5B8C\u6574\u6027\n    if (paper.abstract && paper.abstract.length > 200) {\n      score += 1;\n    }\n    \n    // \u57FA\u4E8E\u5206\u6790\u7ED3\u679C\u7684\u6DF1\u5EA6\n    if (paper.analysis) {\n      const analysis = paper.analysis;\n      \n      // \u5B9E\u9A8C\u90E8\u5206\u7684\u8BE6\u7EC6\u7A0B\u5EA6\n      if (analysis.experiments && analysis.experiments.length > 100) {\n        score += 1;\n      }\n      \n      // \u521B\u65B0\u90E8\u5206\u7684\u6DF1\u5EA6\n      if (analysis.innovations && analysis.innovations.length > 100) {\n        score += 1;\n      }\n      \n      // \u6280\u672F\u6DF1\u5EA6\n      if (analysis.technical_depth === 'high') {\n        score += 1.5;\n      } else if (analysis.technical_depth === 'medium') {\n        score += 0.5;\n      }\n    }\n    \n    // \u57FA\u4E8E\u65B9\u6CD5\u8BBA\u7684\u5B8C\u6574\u6027\n    if (paper.abstract && (\n        paper.abstract.toLowerCase().includes('method') ||\n        paper.abstract.toLowerCase().includes('approach') ||\n        paper.abstract.toLowerCase().includes('algorithm') ||\n        paper.abstract.toLowerCase().includes('framework')\n    )) {\n      score += 0.5;\n    }\n    \n    return Math.min(10, score);\n  } catch (error) {\n    logger.warn('Failed to calculate quality score:', error);\n    return 5;\n  }\n}\n\n// \u8BA1\u7B97\u7EFC\u5408\u8BC4\u5206\nexport function calculateComprehensiveScore(paper) {\n  try {\n    // \u8BA1\u7B97\u5404\u9879\u8BC4\u5206\n    const recencyScore = calculateRecencyScore(paper.published);\n    const relevanceScore = calculateRelevanceScore(paper);\n    const popularityScore = calculatePopularityScore(paper);\n    const qualityScore = calculateQualityScore(paper);\n    \n    // \u8BA1\u7B97\u52A0\u6743\u603B\u5206\n    const totalScore = \n      (recencyScore * SCORING_WEIGHTS.recency) +\n      (relevanceScore * SCORING_WEIGHTS.relevance) +\n      (popularityScore * SCORING_WEIGHTS.popularity) +\n      (qualityScore * SCORING_WEIGHTS.quality);\n    \n    // \u521B\u5EFA\u8BC4\u5206\u8BE6\u60C5\u5BF9\u8C61\n    const scoringDetails = {\n      total_score: Math.round(totalScore * 100) / 100, // \u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570\n      recency_score: Math.round(recencyScore * 100) / 100,\n      relevance_score: Math.round(relevanceScore * 100) / 100,\n      popularity_score: Math.round(popularityScore * 100) / 100,\n      quality_score: Math.round(qualityScore * 100) / 100,\n      weights: SCORING_WEIGHTS,\n      calculated_at: new Date().toISOString()\n    };\n    \n    // \u6DFB\u52A0\u8BC4\u5206\u8BE6\u60C5\u5230\u8BBA\u6587\u5BF9\u8C61\n    const scoredPaper = {\n      ...paper,\n      scoring: scoringDetails\n    };\n    \n    logger.debug(`Calculated score for paper \"${paper.title}\": ${scoringDetails.total_score}`, {\n      recency: scoringDetails.recency_score,\n      relevance: scoringDetails.relevance_score,\n      popularity: scoringDetails.popularity_score,\n      quality: scoringDetails.quality_score\n    });\n    \n    return scoredPaper;\n  } catch (error) {\n    logger.error('Failed to calculate comprehensive score:', error);\n    // \u8FD4\u56DE\u5E26\u6709\u9ED8\u8BA4\u8BC4\u5206\u7684\u8BBA\u6587\n    return {\n      ...paper,\n      scoring: {\n        total_score: 5.0,\n        recency_score: 5.0,\n        relevance_score: 5.0,\n        popularity_score: 5.0,\n        quality_score: 5.0,\n        weights: SCORING_WEIGHTS,\n        calculated_at: new Date().toISOString(),\n        error: 'Scoring calculation failed'\n      }\n    };\n  }\n}\n\n// \u8BBA\u6587\u7B5B\u9009\u548C\u6392\u5E8F\nexport function filterAndSortPapers(papers, options = {}) {\n  const {\n    minScore = 6.0,        // \u6700\u4F4E\u5206\u6570\u9608\u503C\n    maxPapers = 5,         // \u6700\u5927\u8BBA\u6587\u6570\u91CF\n    minRecencyScore = 3.0,  // \u6700\u4F4E\u65B0\u9C9C\u5EA6\u5206\u6570\n    daysAgoLimit = 90      // \u6700\u591A90\u5929\u524D\u7684\u8BBA\u6587\n  } = options;\n  \n  try {\n    const now = new Date();\n    const cutoffDate = new Date(now.getTime() - daysAgoLimit * 24 * 60 * 60 * 1000);\n    \n    // 1. \u4E3A\u6240\u6709\u8BBA\u6587\u8BA1\u7B97\u8BC4\u5206\n    const scoredPapers = papers.map(paper => calculateComprehensiveScore(paper));\n    \n    // 2. \u8FC7\u6EE4\u8BBA\u6587\n    const filteredPapers = scoredPapers.filter(paper => {\n      // \u68C0\u67E5\u65F6\u95F4\u9650\u5236\n      try {\n        const paperDate = new Date(paper.published);\n        if (paperDate < cutoffDate) {\n          return false;\n        }\n      } catch {\n        return false;\n      }\n      \n      // \u68C0\u67E5\u5206\u6570\u9608\u503C\n      if (paper.scoring.total_score < minScore) {\n        return false;\n      }\n      \n      // \u68C0\u67E5\u65B0\u9C9C\u5EA6\u9608\u503C\n      if (paper.scoring.recency_score < minRecencyScore) {\n        return false;\n      }\n      \n      return true;\n    });\n    \n    logger.info(`Filtered ${scoredPapers.length} papers to ${filteredPapers.length} papers`);\n    \n    // 3. \u6392\u5E8F\u8BBA\u6587\n    const sortedPapers = filteredPapers.sort((a, b) => {\n      // \u4E3B\u8981\u6309\u603B\u5206\u6392\u5E8F\n      const scoreDiff = b.scoring.total_score - a.scoring.total_score;\n      if (Math.abs(scoreDiff) > 0.1) {\n        return scoreDiff;\n      }\n      \n      // \u5206\u6570\u76F8\u540C\u65F6\uFF0C\u6309\u65B0\u9C9C\u5EA6\u6392\u5E8F\n      const recencyDiff = b.scoring.recency_score - a.scoring.recency_score;\n      if (Math.abs(recencyDiff) > 0.1) {\n        return recencyDiff;\n      }\n      \n      // \u518D\u6309\u76F8\u5173\u6027\u6392\u5E8F\n      const relevanceDiff = b.scoring.relevance_score - a.scoring.relevance_score;\n      if (Math.abs(relevanceDiff) > 0.1) {\n        return relevanceDiff;\n      }\n      \n      // \u6700\u540E\u6309\u53D1\u5E03\u65F6\u95F4\u6392\u5E8F\n      try {\n        return new Date(b.published) - new Date(a.published);\n      } catch {\n        return 0;\n      }\n    });\n    \n    // 4. \u9009\u62E9Top N\u8BBA\u6587\n    const topPapers = sortedPapers.slice(0, maxPapers);\n    \n    logger.info(`Selected top ${topPapers.length} papers from ${filteredPapers.length} filtered papers`);\n    \n    return topPapers;\n  } catch (error) {\n    logger.error('Failed to filter and sort papers:', error);\n    // \u53D1\u751F\u9519\u8BEF\u65F6\uFF0C\u8FD4\u56DE\u7B80\u5355\u7684\u6309\u65F6\u95F4\u6392\u5E8F\n    return papers\n      .sort((a, b) => new Date(b.published) - new Date(a.published))\n      .slice(0, maxPapers);\n  }\n}\n\n// \u751F\u6210\u8BC4\u5206\u62A5\u544A\nexport function generateScoringReport(papers) {\n  try {\n    const scoredPapers = papers.map(paper => calculateComprehensiveScore(paper));\n    \n    const report = {\n      total_papers: scoredPapers.length,\n      average_score: scoredPapers.reduce((sum, p) => sum + p.scoring.total_score, 0) / scoredPapers.length,\n      score_distribution: {\n        excellent: scoredPapers.filter(p => p.scoring.total_score >= 8.5).length,\n        good: scoredPapers.filter(p => p.scoring.total_score >= 7.0 && p.scoring.total_score < 8.5).length,\n        average: scoredPapers.filter(p => p.scoring.total_score >= 5.5 && p.scoring.total_score < 7.0).length,\n        below_average: scoredPapers.filter(p => p.scoring.total_score < 5.5).length\n      },\n      top_paper: scoredPapers.length > 0 ? scoredPapers[0] : null,\n      scoring_weights: SCORING_WEIGHTS,\n      generated_at: new Date().toISOString()\n    };\n    \n    return report;\n  } catch (error) {\n    logger.error('Failed to generate scoring report:', error);\n    return {\n      error: 'Failed to generate scoring report',\n      message: error.message\n    };\n  }\n}\n\nexport {\n  SCORING_WEIGHTS\n};", "import { AppError } from './config.js';\nimport { validateDate, formatDate, sortPapersByDate, filterPapersByCategory, searchPapers } from './utils.js';\nimport { filterAndSortPapers, generateScoringReport, SCORING_WEIGHTS } from './paper-scoring.js';\n\nconst logger = {\n  info: (msg, data = {}) => console.log(`[BLOG] ${msg}`, data),\n  debug: (msg, data = {}) => console.log(`[BLOG] ${msg}`, data),\n  warn: (msg, data = {}) => console.warn(`[BLOG] ${msg}`, data),\n  error: (msg, data = {}) => console.error(`[BLOG] ${msg}`, data)\n};\n\nexport async function generateDailyReport(papers, date) {\n  try {\n    logger.info(`Generating daily report for ${date} with ${papers.length} papers`);\n    \n    if (!papers || papers.length === 0) {\n      return {\n        date: date,\n        title: `No Papers Found - ${formatDate(date)}`,\n        summary: 'No new AI papers were found for this date.',\n        papers: [],\n        total_papers: 0,\n        categories: {},\n        top_papers: [],\n        scoring_report: null\n      };\n    }\n    \n    // Use enhanced scoring system to filter and select top papers\n    const topPapers = filterAndSortPapers(papers, {\n      minScore: 6.0,\n      maxPapers: 5,\n      minRecencyScore: 3.0,\n      daysAgoLimit: 90\n    });\n    \n    // Generate scoring report\n    const scoringReport = generateScoringReport(papers);\n    \n    // Group by category for all papers\n    const categories = {};\n    papers.forEach(paper => {\n      const category = paper.analysis?.category || paper.category || 'other';\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(paper);\n    });\n    \n    // Generate enhanced summary with scoring information\n    const summary = generateDailySummary(papers, date, categories, scoringReport);\n    \n    const report = {\n      date: date,\n      title: `Daily AI Papers Digest - ${formatDate(date)}`,\n      summary: summary,\n      papers: papers,\n      total_papers: papers.length,\n      categories: categories,\n      top_papers: topPapers,\n      scoring_report: scoringReport,\n      generated_at: new Date().toISOString()\n    };\n    \n    logger.info(`Generated daily report with ${papers.length} papers, selected top ${topPapers.length} papers`);\n    return report;\n    \n  } catch (error) {\n    logger.error('Failed to generate daily report:', error);\n    throw new AppError(`Failed to generate daily report: ${error.message}`);\n  }\n}\n\nfunction getScoreColor(score) {\n  if (score >= 8.5) return '#28a745'; // Excellent - green\n  if (score >= 7.0) return '#17a2b8'; // Good - blue\n  if (score >= 5.5) return '#ffc107'; // Average - yellow\n  return '#dc3545'; // Below average - red\n}\n\nfunction generateDailySummary(papers, date, categories, scoringReport) {\n  const topCategories = Object.entries(categories)\n    .sort(([,a], [,b]) => b.length - a.length)\n    .slice(0, 3)\n    .map(([cat, papers]) => `${cat.replace('_', ' ')} (${papers.length})`)\n    .join(', ');\n  \n  const avgRelevance = papers.reduce((sum, paper) => {\n    return sum + (paper.analysis?.relevance_score || 5);\n  }, 0) / papers.length;\n  \n  const topKeywords = {};\n  papers.forEach(paper => {\n    const keywords = paper.analysis?.keywords || [];\n    keywords.forEach(keyword => {\n      topKeywords[keyword] = (topKeywords[keyword] || 0) + 1;\n    });\n  });\n  \n  const trendingKeywords = Object.entries(topKeywords)\n    .sort(([,a], [,b]) => b - a)\n    .slice(0, 5)\n    .map(([keyword]) => keyword)\n    .join(', ');\n  \n  // Enhanced summary with scoring information\n  let summary = `Today's digest features ${papers.length} papers spanning ${Object.keys(categories).length} categories, with strong representation from ${topCategories}. The average relevance score is ${avgRelevance.toFixed(1)}/10. Trending topics include ${trendingKeywords}.`;\n  \n  if (scoringReport && !scoringReport.error) {\n    summary += ` Using our advanced scoring system that considers recency (${Math.round(SCORING_WEIGHTS.recency * 100)}%), relevance (${Math.round(SCORING_WEIGHTS.relevance * 100)}%), popularity (${Math.round(SCORING_WEIGHTS.popularity * 100)}%), and quality (${Math.round(SCORING_WEIGHTS.quality * 100)}%), we selected the top 5 papers with an average score of ${scoringReport.average_score.toFixed(1)}/10.`;\n    \n    if (scoringReport.score_distribution) {\n      const excellentCount = scoringReport.score_distribution.excellent || 0;\n      const goodCount = scoringReport.score_distribution.good || 0;\n      if (excellentCount > 0 || goodCount > 0) {\n        summary += ` ${excellentCount} papers scored excellent (8.5+), and ${goodCount} scored good (7.0+).`;\n      }\n    }\n  }\n  \n  return summary;\n}\n\nexport async function generateBlogContent(papers, options = {}) {\n  const {\n    title = 'AI Research Papers Daily',\n    description = 'Latest advances in artificial intelligence and computer vision research',\n    showFullAnalysis = false,\n    maxPapers = 20\n  } = options;\n  \n  try {\n    const sortedPapers = sortPapersByDate(papers).slice(0, maxPapers);\n    \n    let html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>${title}</title>\n    <meta name=\"description\" content=\"${description}\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        body {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n        .hero-section {\n            background: rgba(255, 255, 255, 0.1);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 3rem 2rem;\n            margin: 2rem 0;\n            color: white;\n            text-align: center;\n        }\n        .paper-card {\n            background: white;\n            border-radius: 15px;\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        .paper-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n        }\n        .paper-title {\n            color: #2c3e50;\n            font-weight: 600;\n            margin-bottom: 0.5rem;\n            font-size: 1.2rem;\n        }\n        .paper-authors {\n            color: #7f8c8d;\n            font-size: 0.9rem;\n            margin-bottom: 1rem;\n        }\n        .paper-abstract {\n            color: #34495e;\n            line-height: 1.6;\n            margin-bottom: 1rem;\n        }\n        .paper-meta {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            flex-wrap: wrap;\n            gap: 0.5rem;\n        }\n        .category-badge {\n            background: linear-gradient(45deg, #667eea, #764ba2);\n            color: white;\n            padding: 0.25rem 0.75rem;\n            border-radius: 20px;\n            font-size: 0.8rem;\n            font-weight: 500;\n        }\n        .relevance-score {\n            background: #27ae60;\n            color: white;\n            padding: 0.25rem 0.5rem;\n            border-radius: 15px;\n            font-size: 0.8rem;\n        }\n        .keywords {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 0.5rem;\n            margin-top: 1rem;\n        }\n        .keyword-tag {\n            background: #ecf0f1;\n            color: #2c3e50;\n            padding: 0.25rem 0.5rem;\n            border-radius: 12px;\n            font-size: 0.75rem;\n        }\n        .analysis-section {\n            background: #f8f9fa;\n            border-radius: 10px;\n            padding: 1rem;\n            margin-top: 1rem;\n            border-left: 4px solid #667eea;\n        }\n        .source-icon {\n            margin-right: 0.5rem;\n        }\n        .arxiv-icon { color: #b31b1b; }\n        .huggingface-icon { color: #ffd700; }\n        .stats-section {\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 15px;\n            padding: 2rem;\n            margin: 2rem 0;\n            text-align: center;\n        }\n        .stat-item {\n            margin: 1rem;\n        }\n        .stat-number {\n            font-size: 2rem;\n            font-weight: bold;\n            color: #667eea;\n        }\n        .stat-label {\n            color: #7f8c8d;\n            font-size: 0.9rem;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"hero-section\">\n            <h1 class=\"display-4 mb-3\">\n                <i class=\"fas fa-graduation-cap me-3\"></i>${title}\n            </h1>\n            <p class=\"lead\">${description}</p>\n            <p class=\"mb-0\">\n                <i class=\"fas fa-calendar-alt me-2\"></i>\n                Updated: ${formatDate(new Date().toISOString().split('T')[0])}\n            </p>\n        </div>\n        \n        <div class=\"stats-section\">\n            <div class=\"row\">\n                <div class=\"col-md-3 stat-item\">\n                    <div class=\"stat-number\">${papers.length}</div>\n                    <div class=\"stat-label\">Total Papers</div>\n                </div>\n                <div class=\"col-md-3 stat-item\">\n                    <div class=\"stat-number\">${new Set(papers.map(p => p.analysis?.category || p.category || 'other')).size}</div>\n                    <div class=\"stat-label\">Categories</div>\n                </div>\n                <div class=\"col-md-3 stat-item\">\n                    <div class=\"stat-number\">${papers.filter(p => p.source === 'arxiv').length}</div>\n                    <div class=\"stat-label\">arXiv Papers</div>\n                </div>\n                <div class=\"col-md-3 stat-item\">\n                    <div class=\"stat-number\">${papers.filter(p => p.source === 'huggingface').length}</div>\n                    <div class=\"stat-label\">HuggingFace Papers</div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2 class=\"text-white mb-4\">\n                    <i class=\"fas fa-fire me-2\"></i>Today's Top Papers\n                </h2>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            ${sortedPapers.map(paper => generatePaperCard(paper, showFullAnalysis)).join('')}\n        </div>\n        \n        <footer class=\"text-center text-white py-4 mt-5\">\n            <p class=\"mb-0\">\n                <i class=\"fas fa-robot me-2\"></i>\n                Curated by PaperDog AI \u2022 \n                <i class=\"fas fa-code me-1\"></i>\n                Built with Cloudflare Workers\n            </p>\n        </footer>\n    </div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n</body>\n</html>`;\n    \n    return html;\n    \n  } catch (error) {\n    logger.error('Failed to generate blog content:', error);\n    throw new AppError(`Failed to generate blog content: ${error.message}`);\n  }\n}\n\nfunction generatePaperCard(paper, showFullAnalysis = false) {\n  const sourceIcon = paper.source === 'arxiv' ? 'arxiv-icon' : 'huggingface-icon';\n  const sourceName = paper.source === 'arxiv' ? 'arXiv' : 'HuggingFace';\n  const relevanceScore = paper.analysis?.relevance_score || 5;\n  const category = paper.analysis?.category || paper.category || 'other';\n  const keywords = paper.analysis?.keywords || [];\n  \n  // Enhanced scoring information\n  const totalScore = paper.scoring?.total_score || relevanceScore;\n  const recencyScore = paper.scoring?.recency_score || 5;\n  const isTopPaper = paper.scoring && totalScore >= 7.0;\n  \n  let analysisContent = '';\n  if (showFullAnalysis && paper.analysis) {\n    analysisContent = `\n        <div class=\"analysis-section\">\n            <h6 class=\"mb-2\"><i class=\"fas fa-brain me-2\"></i>AI Analysis</h6>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <strong>Introduction:</strong>\n                    <p class=\"small\">${paper.analysis.introduction || 'Not available'}</p>\n                </div>\n                <div class=\"col-md-6\">\n                    <strong>Innovations:</strong>\n                    <p class=\"small\">${paper.analysis.innovations || 'Not available'}</p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <strong>Results:</strong>\n                    <p class=\"small\">${paper.analysis.experiments || 'Not available'}</p>\n                </div>\n                <div class=\"col-md-6\">\n                    <strong>Insights:</strong>\n                    <p class=\"small\">${paper.analysis.insights || 'Not available'}</p>\n                </div>\n            </div>\n        </div>\n    `;\n  }\n  \n  return `\n        <div class=\"col-lg-6 mb-4\">\n            <div class=\"paper-card ${isTopPaper ? 'border border-warning border-2' : ''}\">\n                ${isTopPaper ? '<div class=\"position-absolute top-0 end-0 m-2\"><span class=\"badge bg-warning text-dark\"><i class=\"fas fa-trophy me-1\"></i>Top Paper</span></div>' : ''}\n                <div class=\"paper-title\">\n                    <i class=\"fas fa-file-alt source-icon ${sourceIcon}\"></i>\n                    <a href=\"${paper.url}\" target=\"_blank\" class=\"text-decoration-none\">${paper.title}</a>\n                </div>\n                \n                <div class=\"paper-authors\">\n                    <i class=\"fas fa-users me-2\"></i>\n                    ${paper.authors ? paper.authors.slice(0, 3).join(', ') + (paper.authors.length > 3 ? ' et al.' : '') : 'Unknown authors'}\n                </div>\n                \n                <div class=\"paper-abstract\">\n                    ${paper.abstract ? paper.abstract.substring(0, 200) + '...' : 'No abstract available'}\n                </div>\n                \n                <div class=\"paper-meta\">\n                    <div>\n                        <span class=\"category-badge\">${category.replace('_', ' ')}</span>\n                        <span class=\"relevance-score\" style=\"background: ${getScoreColor(totalScore)};\">\n                            <i class=\"fas fa-star me-1\"></i>${totalScore.toFixed(1)}/10\n                        </span>\n                        ${paper.scoring ? `\n                        <span class=\"recency-score\" style=\"background: #17a2b8; color: white; padding: 0.25rem 0.5rem; border-radius: 15px; font-size: 0.8rem;\">\n                            <i class=\"fas fa-clock me-1\"></i>${recencyScore.toFixed(1)}\n                        </span>\n                        ` : ''}\n                    </div>\n                    <div class=\"text-muted small\">\n                        <i class=\"fas fa-external-link-alt me-1\"></i>\n                        ${sourceName}\n                    </div>\n                </div>\n                \n                ${analysisContent}\n                \n                ${keywords.length > 0 ? `\n                <div class=\"keywords\">\n                    ${keywords.slice(0, 5).map(keyword => \n                        `<span class=\"keyword-tag\">${keyword}</span>`\n                    ).join('')}\n                </div>\n                ` : ''}\n                \n                <div class=\"mt-3\">\n                    <a href=\"${paper.url}\" target=\"_blank\" class=\"btn btn-outline-primary btn-sm me-2\">\n                        <i class=\"fas fa-external-link-alt me-1\"></i>View Paper\n                    </a>\n                    ${paper.pdf_url ? `\n                    <a href=\"${paper.pdf_url}\" target=\"_blank\" class=\"btn btn-outline-danger btn-sm\">\n                        <i class=\"fas fa-file-pdf me-1\"></i>PDF\n                    </a>\n                    ` : ''}\n                </div>\n            </div>\n        </div>\n    `;\n}\n\nexport function generateRSSFeed(papers, options = {}) {\n  const {\n    title = 'PaperDog - AI Papers Daily',\n    description = 'Daily curated AI and computer vision research papers',\n    link = 'https://paperdog.org',\n    maxItems = 20\n  } = options;\n  \n  const sortedPapers = sortPapersByDate(papers).slice(0, maxItems);\n  \n  const items = sortedPapers.map(paper => {\n    const pubDate = new Date(paper.published || paper.scraped_at).toUTCString();\n    const description = `\n        <strong>Authors:</strong> ${paper.authors ? paper.authors.join(', ') : 'Unknown'}<br>\n        <strong>Category:</strong> ${paper.analysis?.category || paper.category || 'other'}<br>\n        <strong>Relevance Score:</strong> ${paper.analysis?.relevance_score || 5}/10<br><br>\n        ${paper.abstract ? paper.abstract.substring(0, 500) + '...' : 'No abstract available'}\n        ${paper.analysis?.keywords ? '<br><br><strong>Keywords:</strong> ' + paper.analysis.keywords.join(', ') : ''}\n    `;\n    \n    return `\n        <item>\n            <title><![CDATA[${paper.title}]]></title>\n            <description><![CDATA[${description}]]></description>\n            <link>${paper.url}</link>\n            <guid isPermaLink=\"false\">${paper.id}</guid>\n            <pubDate>${pubDate}</pubDate>\n        </item>\n    `;\n  }).join('');\n  \n  const rss = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n    <channel>\n        <title>${title}</title>\n        <description>${description}</description>\n        <link>${link}</link>\n        <atom:link href=\"${link}/feed\" rel=\"self\" type=\"application/rss+xml\"/>\n        <language>en</language>\n        <lastBuildDate>${new Date().toUTCString()}</lastBuildDate>\n        ${items}\n    </channel>\n</rss>`;\n  \n  return rss;\n}", "import { formatDate } from './utils.js';\n\nexport function getIndexHTML(papers = [], dailyReport = null) {\n  const recentPapers = papers.slice(0, 6);\n  const totalPapers = papers.length;\n  const categories = [...new Set(papers.map(p => p.analysis?.category || p.category || 'other'))];\n  \n  return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>PaperDog - AI Papers Daily Digest</title>\n    <meta name=\"description\" content=\"Daily curated AI and computer vision research papers from arXiv and HuggingFace\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        :root {\n            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n            --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n        }\n        \n        body {\n            background: #f8f9fa;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n        \n        .hero-section {\n            background: var(--primary-gradient);\n            color: white;\n            padding: 4rem 0;\n            margin-bottom: 3rem;\n        }\n        \n        .hero-title {\n            font-size: 3rem;\n            font-weight: 700;\n            margin-bottom: 1rem;\n        }\n        \n        .hero-subtitle {\n            font-size: 1.25rem;\n            opacity: 0.9;\n            margin-bottom: 2rem;\n        }\n        \n        .stats-card {\n            background: white;\n            border-radius: 15px;\n            padding: 2rem;\n            box-shadow: var(--card-shadow);\n            text-align: center;\n            margin-bottom: 2rem;\n            transition: transform 0.3s ease;\n        }\n        \n        .stats-card:hover {\n            transform: translateY(-5px);\n        }\n        \n        .stats-number {\n            font-size: 2.5rem;\n            font-weight: bold;\n            color: #667eea;\n            margin-bottom: 0.5rem;\n        }\n        \n        .paper-card {\n            background: white;\n            border-radius: 15px;\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n            box-shadow: var(--card-shadow);\n            transition: all 0.3s ease;\n            height: 100%;\n        }\n        \n        .paper-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n        }\n        \n        .paper-title {\n            color: #2c3e50;\n            font-weight: 600;\n            margin-bottom: 0.75rem;\n            font-size: 1.1rem;\n            line-height: 1.4;\n        }\n        \n        .paper-title a {\n            color: inherit;\n            text-decoration: none;\n        }\n        \n        .paper-title a:hover {\n            color: #667eea;\n        }\n        \n        .paper-meta {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 1rem;\n            flex-wrap: wrap;\n            gap: 0.5rem;\n        }\n        \n        .source-badge {\n            font-size: 0.8rem;\n            padding: 0.25rem 0.75rem;\n            border-radius: 20px;\n            font-weight: 500;\n        }\n        \n        .arxiv-badge {\n            background: #dc3545;\n            color: white;\n        }\n        \n        .huggingface-badge {\n            background: #ffc107;\n            color: #212529;\n        }\n        \n        .category-badge {\n            background: var(--primary-gradient);\n            color: white;\n            padding: 0.25rem 0.75rem;\n            border-radius: 20px;\n            font-size: 0.8rem;\n            font-weight: 500;\n        }\n        \n        .relevance-score {\n            background: #28a745;\n            color: white;\n            padding: 0.25rem 0.5rem;\n            border-radius: 15px;\n            font-size: 0.8rem;\n        }\n        \n        .paper-abstract {\n            color: #6c757d;\n            line-height: 1.6;\n            margin-bottom: 1rem;\n            font-size: 0.9rem;\n        }\n        \n        .keywords {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 0.5rem;\n            margin-top: 1rem;\n        }\n        \n        .keyword-tag {\n            background: #e9ecef;\n            color: #495057;\n            padding: 0.25rem 0.5rem;\n            border-radius: 12px;\n            font-size: 0.75rem;\n        }\n        \n        .section-title {\n            font-size: 2rem;\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 2rem;\n            text-align: center;\n        }\n        \n        .btn-primary-custom {\n            background: var(--primary-gradient);\n            border: none;\n            border-radius: 25px;\n            padding: 0.75rem 2rem;\n            font-weight: 500;\n            transition: all 0.3s ease;\n        }\n        \n        .btn-primary-custom:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n        }\n        \n        .footer {\n            background: #2c3e50;\n            color: white;\n            padding: 3rem 0 2rem;\n            margin-top: 5rem;\n        }\n        \n        .loading-spinner {\n            display: none;\n            text-align: center;\n            padding: 2rem;\n        }\n        \n        .feature-icon {\n            font-size: 3rem;\n            color: #667eea;\n            margin-bottom: 1rem;\n        }\n        \n        @media (max-width: 768px) {\n            .hero-title {\n                font-size: 2rem;\n            }\n            \n            .hero-subtitle {\n                font-size: 1rem;\n            }\n            \n            .paper-meta {\n                flex-direction: column;\n                align-items: flex-start;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- Hero Section -->\n    <section class=\"hero-section\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-lg-8 mx-auto text-center\">\n                    <h1 class=\"hero-title\">\n                        <i class=\"fas fa-graduation-cap me-3\"></i>PaperDog\n                    </h1>\n                    <p class=\"hero-subtitle\">\n                        Daily AI & Computer Vision Research Papers Digest\n                    </p>\n                    <p class=\"lead mb-4\">\n                        Curated from arXiv and HuggingFace with AI-powered analysis\n                    </p>\n                    <div class=\"d-flex justify-content-center gap-3\">\n                        <a href=\"#papers\" class=\"btn btn-light btn-lg\">\n                            <i class=\"fas fa-book-open me-2\"></i>Explore Papers\n                        </a>\n                        <a href=\"/api/papers\" class=\"btn btn-outline-light btn-lg\">\n                            <i class=\"fas fa-code me-2\"></i>API\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <!-- Stats Section -->\n    <section class=\"container mb-5\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div class=\"stats-card\">\n                    <div class=\"stats-number\">${totalPapers}</div>\n                    <div class=\"text-muted\">Total Papers</div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"stats-card\">\n                    <div class=\"stats-number\">${categories.length}</div>\n                    <div class=\"text-muted\">Categories</div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"stats-card\">\n                    <div class=\"stats-number\">${papers.filter(p => p.source === 'arxiv').length}</div>\n                    <div class=\"text-muted\">arXiv Papers</div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"stats-card\">\n                    <div class=\"stats-number\">${papers.filter(p => p.source === 'huggingface').length}</div>\n                    <div class=\"text-muted\">HuggingFace Papers</div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <!-- Features Section -->\n    <section class=\"container mb-5\">\n        <div class=\"row\">\n            <div class=\"col-md-4 text-center mb-4\">\n                <div class=\"feature-icon\">\n                    <i class=\"fas fa-robot\"></i>\n                </div>\n                <h4>AI-Powered Analysis</h4>\n                <p>Advanced AI analyzes each paper for relevance, methodology, and impact</p>\n            </div>\n            <div class=\"col-md-4 text-center mb-4\">\n                <div class=\"feature-icon\">\n                    <i class=\"fas fa-sync-alt\"></i>\n                </div>\n                <h4>Daily Updates</h4>\n                <p>Automatically updated every day with the latest research papers</p>\n            </div>\n            <div class=\"col-md-4 text-center mb-4\">\n                <div class=\"feature-icon\">\n                    <i class=\"fas fa-filter\"></i>\n                </div>\n                <h4>Smart Curation</h4>\n                <p>Intelligent filtering ensures only high-quality, relevant papers</p>\n            </div>\n        </div>\n    </section>\n\n    <!-- Recent Papers Section -->\n    <section class=\"container mb-5\" id=\"papers\">\n        <h2 class=\"section-title\">\n            <i class=\"fas fa-fire me-2\"></i>Recent Papers\n        </h2>\n        \n        <div class=\"loading-spinner\" id=\"loadingSpinner\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <p class=\"mt-2\">Loading latest papers...</p>\n        </div>\n        \n        <div class=\"row\" id=\"papersContainer\">\n            ${recentPapers.map(paper => generatePaperCardHTML(paper)).join('')}\n        </div>\n        \n        ${recentPapers.length > 0 ? `\n        <div class=\"text-center mt-4\">\n            <a href=\"/archive\" class=\"btn btn-primary-custom\">\n                <i class=\"fas fa-archive me-2\"></i>View All Papers\n            </a>\n            <a href=\"/feed\" class=\"btn btn-outline-primary ms-2\">\n                <i class=\"fas fa-rss me-2\"></i>RSS Feed\n            </a>\n        </div>\n        ` : ''}\n    </section>\n\n    <!-- Daily Report Section -->\n    ${dailyReport ? `\n    <section class=\"container mb-5\">\n        <div class=\"card border-0 shadow-sm\">\n            <div class=\"card-body p-4\">\n                <h3 class=\"card-title\">\n                    <i class=\"fas fa-chart-line me-2\"></i>Daily Report - ${formatDate(dailyReport.date)}\n                </h3>\n                <p class=\"card-text\">${dailyReport.summary}</p>\n                <a href=\"/report/${dailyReport.date}\" class=\"btn btn-outline-primary\">\n                    <i class=\"fas fa-eye me-2\"></i>View Full Report\n                </a>\n            </div>\n        </div>\n    </section>\n    ` : ''}\n\n    <!-- Footer -->\n    <footer class=\"footer\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <h5><i class=\"fas fa-graduation-cap me-2\"></i>PaperDog</h5>\n                    <p>Your daily source for AI and computer vision research papers.</p>\n                </div>\n                <div class=\"col-md-4\">\n                    <h5>Quick Links</h5>\n                    <ul class=\"list-unstyled\">\n                        <li><a href=\"/\" class=\"text-white-50\">Home</a></li>\n                        <li><a href=\"/archive\" class=\"text-white-50\">Archive</a></li>\n                        <li><a href=\"/api/papers\" class=\"text-white-50\">API</a></li>\n                        <li><a href=\"/feed\" class=\"text-white-50\">RSS Feed</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-md-4\">\n                    <h5>Connect</h5>\n                    <p>\n                        <a href=\"https://paperdog.org\" class=\"text-white-50 me-3\">\n                            <i class=\"fas fa-globe\"></i>\n                        </a>\n                        <a href=\"/feed\" class=\"text-white-50 me-3\">\n                            <i class=\"fas fa-rss\"></i>\n                        </a>\n                        <a href=\"mailto:contact@paperdog.org\" class=\"text-white-50\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </a>\n                    </p>\n                    <p class=\"text-white-50 small\">\n                        Built with \u2764\uFE0F using Cloudflare Workers\n                    </p>\n                </div>\n            </div>\n            <hr class=\"my-4 bg-white\">\n            <div class=\"text-center\">\n                <p class=\"mb-0 text-white-50\">&copy; 2024 PaperDog. All rights reserved.</p>\n            </div>\n        </div>\n    </footer>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        // Simple search functionality\n        document.addEventListener('DOMContentLoaded', function() {\n            const searchInput = document.createElement('input');\n            searchInput.type = 'text';\n            searchInput.className = 'form-control mb-4';\n            searchInput.placeholder = 'Search papers...';\n            searchInput.id = 'searchInput';\n            \n            const papersSection = document.querySelector('#papers');\n            if (papersSection) {\n                papersSection.insertBefore(searchInput, papersSection.firstChild.nextSibling);\n            }\n            \n            searchInput.addEventListener('input', function(e) {\n                const searchTerm = e.target.value.toLowerCase();\n                const paperCards = document.querySelectorAll('.paper-card');\n                \n                paperCards.forEach(card => {\n                    const text = card.textContent.toLowerCase();\n                    if (text.includes(searchTerm)) {\n                        card.style.display = 'block';\n                    } else {\n                        card.style.display = 'none';\n                    }\n                });\n            });\n        });\n    </script>\n</body>\n</html>`;\n}\n\nfunction generatePaperCardHTML(paper) {\n  const sourceClass = paper.source === 'arxiv' ? 'arxiv-badge' : 'huggingface-badge';\n  const sourceIcon = paper.source === 'arxiv' ? 'fas fa-university' : 'fas fa-heart';\n  const relevanceScore = paper.analysis?.relevance_score || 5;\n  const category = paper.analysis?.category || paper.category || 'other';\n  const keywords = paper.analysis?.keywords || [];\n  \n  return `\n        <div class=\"col-lg-6 col-xl-4 mb-4\">\n            <div class=\"paper-card\">\n                <div class=\"paper-title\">\n                    <a href=\"${paper.url}\" target=\"_blank\">${paper.title}</a>\n                </div>\n                \n                <div class=\"paper-meta\">\n                    <div>\n                        <span class=\"source-badge ${sourceClass}\">\n                            <i class=\"${sourceIcon} me-1\"></i>${paper.source}\n                        </span>\n                    </div>\n                    <div>\n                        <span class=\"relevance-score\">\n                            <i class=\"fas fa-star me-1\"></i>${relevanceScore}/10\n                        </span>\n                    </div>\n                </div>\n                \n                <div class=\"paper-abstract\">\n                    ${paper.abstract ? paper.abstract.substring(0, 150) + '...' : 'No abstract available'}\n                </div>\n                \n                <div class=\"mb-2\">\n                    <span class=\"category-badge\">${category.replace('_', ' ')}</span>\n                </div>\n                \n                ${keywords.length > 0 ? `\n                <div class=\"keywords\">\n                    ${keywords.slice(0, 3).map(keyword => \n                        `<span class=\"keyword-tag\">${keyword}</span>`\n                    ).join('')}\n                </div>\n                ` : ''}\n                \n                <div class=\"mt-3\">\n                    <a href=\"${paper.url}\" target=\"_blank\" class=\"btn btn-outline-primary btn-sm me-2\">\n                        <i class=\"fas fa-external-link-alt me-1\"></i>View Paper\n                    </a>\n                    ${paper.pdf_url ? `\n                    <a href=\"${paper.pdf_url}\" target=\"_blank\" class=\"btn btn-outline-danger btn-sm\">\n                        <i class=\"fas fa-file-pdf me-1\"></i>PDF\n                    </a>\n                    ` : ''}\n                </div>\n            </div>\n        </div>\n    `;\n}\n\nexport function getReportHTML(report) {\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Daily Report - ${report.date} | PaperDog</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        body { background: #f8f9fa; }\n        .report-header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 3rem 0;\n            margin-bottom: 2rem;\n        }\n        .paper-summary {\n            background: white;\n            border-radius: 10px;\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n    </style>\n</head>\n<body>\n    <div class=\"report-header\">\n        <div class=\"container\">\n            <h1 class=\"display-4\">\n                <i class=\"fas fa-chart-line me-3\"></i>Daily Report\n            </h1>\n            <p class=\"lead\">${report.date}</p>\n            <p>${report.summary}</p>\n        </div>\n    </div>\n    \n    <div class=\"container\">\n        <div class=\"row mb-4\">\n            <div class=\"col-md-3\">\n                <div class=\"text-center\">\n                    <h3 class=\"text-primary\">${report.total_papers}</h3>\n                    <p class=\"text-muted\">Total Papers</p>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"text-center\">\n                    <h3 class=\"text-success\">${Object.keys(report.categories).length}</h3>\n                    <p class=\"text-muted\">Categories</p>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"text-center\">\n                    <h3 class=\"text-warning\">${report.top_papers.length}</h3>\n                    <p class=\"text-muted\">Top Papers</p>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"text-center\">\n                    <h3 class=\"text-info\">${report.papers.filter(p => p.source === 'arxiv').length}</h3>\n                    <p class=\"text-muted\">arXiv Papers</p>\n                </div>\n            </div>\n        </div>\n        \n        <h2 class=\"mb-4\">Top Papers Today</h2>\n        <div class=\"row\">\n            ${report.top_papers.map(paper => `\n                <div class=\"col-lg-6 mb-4\">\n                    <div class=\"paper-summary\">\n                        <h5>${paper.title}</h5>\n                        <p class=\"text-muted\">\n                            <strong>Authors:</strong> ${paper.authors ? paper.authors.slice(0, 3).join(', ') + (paper.authors.length > 3 ? ' et al.' : '') : 'Unknown'}\n                        </p>\n                        <p><strong>Category:</strong> ${paper.analysis?.category || paper.category || 'other'}</p>\n                        <p><strong>Relevance:</strong> ${paper.analysis?.relevance_score || 5}/10</p>\n                        <p><strong>Abstract:</strong> ${paper.abstract ? paper.abstract.substring(0, 200) + '...' : 'No abstract available'}</p>\n                        <a href=\"${paper.url}\" target=\"_blank\" class=\"btn btn-primary btn-sm\">\n                            <i class=\"fas fa-external-link-alt me-1\"></i>View Paper\n                        </a>\n                    </div>\n                </div>\n            `).join('')}\n        </div>\n        \n        <div class=\"text-center mt-4\">\n            <a href=\"/\" class=\"btn btn-secondary\">\n                <i class=\"fas fa-arrow-left me-2\"></i>Back to Home\n            </a>\n        </div>\n    </div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n</body>\n</html>`;\n}\n\nexport function getArchiveHTML(papers, options = {}) {\n  const { page = 1, limit = 12, category = null, search = null } = options;\n  \n  let filteredPapers = papers;\n  \n  if (category) {\n    filteredPapers = filteredPapers.filter(p => \n      (p.analysis?.category || p.category || 'other') === category\n    );\n  }\n  \n  if (search) {\n    const searchLower = search.toLowerCase();\n    filteredPapers = filteredPapers.filter(p => \n      p.title.toLowerCase().includes(searchLower) ||\n      p.abstract.toLowerCase().includes(searchLower) ||\n      (p.authors && p.authors.some(a => a.toLowerCase().includes(searchLower)))\n    );\n  }\n  \n  const totalPages = Math.ceil(filteredPapers.length / limit);\n  const startIndex = (page - 1) * limit;\n  const endIndex = startIndex + limit;\n  const paginatedPapers = filteredPapers.slice(startIndex, endIndex);\n  \n  return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Paper Archive - PaperDog</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        body { background: #f8f9fa; }\n        .archive-header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 3rem 0;\n            margin-bottom: 2rem;\n        }\n        .filter-section {\n            background: white;\n            border-radius: 10px;\n            padding: 1.5rem;\n            margin-bottom: 2rem;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n    </style>\n</head>\n<body>\n    <div class=\"archive-header\">\n        <div class=\"container\">\n            <h1 class=\"display-4\">\n                <i class=\"fas fa-archive me-3\"></i>Paper Archive\n            </h1>\n            <p class=\"lead\">Browse through ${filteredPapers.length} research papers</p>\n        </div>\n    </div>\n    \n    <div class=\"container\">\n        <div class=\"filter-section\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Search papers...\" \n                           value=\"${search || ''}\" id=\"searchInput\">\n                </div>\n                <div class=\"col-md-3\">\n                    <select class=\"form-select\" id=\"categoryFilter\">\n                        <option value=\"\">All Categories</option>\n                        <option value=\"computer_vision\" ${category === 'computer_vision' ? 'selected' : ''}>Computer Vision</option>\n                        <option value=\"machine_learning\" ${category === 'machine_learning' ? 'selected' : ''}>Machine Learning</option>\n                        <option value=\"natural_language_processing\" ${category === 'natural_language_processing' ? 'selected' : ''}>NLP</option>\n                        <option value=\"reinforcement_learning\" ${category === 'reinforcement_learning' ? 'selected' : ''}>Reinforcement Learning</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\">\n                    <button class=\"btn btn-primary w-100\" onclick=\"applyFilters()\">\n                        <i class=\"fas fa-filter me-1\"></i>Filter\n                    </button>\n                </div>\n                <div class=\"col-md-3\">\n                    <a href=\"/\" class=\"btn btn-outline-secondary w-100\">\n                        <i class=\"fas fa-home me-1\"></i>Back to Home\n                    </a>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            ${paginatedPapers.map(paper => generatePaperCardHTML(paper)).join('')}\n        </div>\n        \n        ${totalPages > 1 ? `\n        <nav aria-label=\"Page navigation\" class=\"mt-4\">\n            <ul class=\"pagination justify-content-center\">\n                ${page > 1 ? `\n                <li class=\"page-item\">\n                    <a class=\"page-link\" href=\"?page=${page-1}&category=${category || ''}&search=${search || ''}\">Previous</a>\n                </li>\n                ` : ''}\n                \n                ${Array.from({length: Math.min(5, totalPages)}, (_, i) => {\n                    const pageNum = Math.max(1, Math.min(totalPages - 4, page - 2)) + i;\n                    return `\n                    <li class=\"page-item ${pageNum === page ? 'active' : ''}\">\n                        <a class=\"page-link\" href=\"?page=${pageNum}&category=${category || ''}&search=${search || ''}\">${pageNum}</a>\n                    </li>\n                    `;\n                }).join('')}\n                \n                ${page < totalPages ? `\n                <li class=\"page-item\">\n                    <a class=\"page-link\" href=\"?page=${page+1}&category=${category || ''}&search=${search || ''}\">Next</a>\n                </li>\n                ` : ''}\n            </ul>\n        </nav>\n        ` : ''}\n    </div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        function applyFilters() {\n            const search = document.getElementById('searchInput').value;\n            const category = document.getElementById('categoryFilter').value;\n            const params = new URLSearchParams();\n            \n            if (search) params.append('search', search);\n            if (category) params.append('category', category);\n            \n            window.location.search = params.toString();\n        }\n        \n        document.getElementById('searchInput').addEventListener('keypress', function(e) {\n            if (e.key === 'Enter') {\n                applyFilters();\n            }\n        });\n    </script>\n</body>\n</html>`;\n}", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/zhouql1978/dev/paperdog/target/.wrangler/tmp/bundle-b1xAcf/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/zhouql1978/.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/zhouql1978/dev/paperdog/target/.wrangler/tmp/bundle-b1xAcf/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/zhouql1978/dev/paperdog/target/.wrangler/tmp/bundle-b1xAcf/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/zhouql1978/dev/paperdog/target/worker-modules/functions/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/zhouql1978/.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/zhouql1978/.nvm/versions/node/v22.17.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/zhouql1978/dev/paperdog/target/worker-modules/functions/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "// Main entry point - imports all modules and sets up the worker\nimport { routes } from '../src/config.js';\nimport {\n  handleRoot,\n  handlePapersList,\n  handlePapersByDate,\n  handlePaperById,\n  handleUpdatePapers,\n  handleCategories,\n  handleSearch,\n  handleRSSFeed,\n  handleAbout,\n  handleScoringReport\n} from '../src/handlers.js';\nimport { scrapeDailyPapers } from '../src/paper-scraper.js';\nimport { analyzePapers } from '../src/paper-analyzer.js';\nimport { generateDailyReport } from '../src/blog-generator.js';\nimport { errorResponse, cachePapers } from '../src/utils.js';\n\n// Handler mapping - direct function calls instead of eval\nconst handlers = {\n  handleRoot,\n  handlePapersList,\n  handlePapersByDate,\n  handlePaperById,\n  handleUpdatePapers,\n  handleCategories,\n  handleSearch,\n  handleRSSFeed,\n  handleAbout,\n  handleScoringReport\n};\n\n// Main Fetch Handler\nexport default {\n  async fetch(request, env, ctx) {\n    try {\n      const url = new URL(request.url);\n      const path = url.pathname;\n      const method = request.method;\n      \n      // Handle OPTIONS preflight\n      if (method === 'OPTIONS') {\n        return new Response(null, { \n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type',\n          }\n        });\n      }\n\n      // Route matching\n      for (const [pattern, handlerName] of Object.entries(routes)) {\n        const [routeMethod, routePath] = pattern.split(' ');\n        if (method === routeMethod) {\n          // Handle parameterized routes\n          if (routePath.includes(':')) {\n            const routeParts = routePath.split('/');\n            const pathParts = path.split('/');\n            if (routeParts.length === pathParts.length) {\n              let match = true;\n              let paramValue = null;\n              for (let i = 0; i < routeParts.length; i++) {\n                if (routeParts[i].startsWith(':')) {\n                  paramValue = pathParts[i];\n                } else if (routeParts[i] !== pathParts[i]) {\n                  match = false;\n                  break;\n                }\n              }\n              if (match && paramValue) {\n                // Call handler directly using handler mapping\n                const handler = handlers[handlerName];\n                if (handler) {\n                  return await handler(request, env, paramValue);\n                }\n              }\n            }\n          } else if (path === routePath) {\n            // Call handler directly using handler mapping\n            const handler = handlers[handlerName];\n            if (handler) {\n              return await handler(request, env);\n            }\n          }\n        }\n      }\n      \n      // Handle static routes (archive, report, etc.)\n      if (path === '/archive') {\n        return await handleArchive(request, env);\n      } else if (path.startsWith('/report/')) {\n        const date = path.split('/')[2];\n        return await handleReportByDate(request, env, date);\n      }\n      \n      return errorResponse('Route not found', 404);\n    } catch (error) {\n      console.error('Fetch error:', error);\n      return errorResponse(error.message, error.statusCode || 500);\n    }\n  },\n\n  async scheduled(event, env, ctx) {\n    console.log('Running scheduled paper update at:', new Date().toISOString());\n    \n    try {\n      const apiKey = env.OPENROUTER_API_KEY;\n      if (!apiKey) {\n        console.error('\u274C OPENROUTER_API_KEY not configured');\n        return;\n      }\n      \n      const today = new Date().toISOString().split('T')[0];\n      console.log(`\uD83D\uDD04 Starting daily paper update for ${today}`);\n      \n      // Step 1: Scrape papers\n      console.log('\uD83D\uDCE1 Scraping papers from sources...');\n      const scrapedPapers = await scrapeDailyPapers();\n      if (scrapedPapers.length === 0) {\n        console.error('\u274C No papers could be scraped from sources');\n        return;\n      }\n      \n      console.log(`\u2705 Scraped ${scrapedPapers.length} papers`);\n      \n      // Step 2: Analyze papers\n      console.log('\uD83E\uDDE0 Analyzing papers with AI...');\n      const analyzedPapers = await analyzePapers(scrapedPapers, apiKey);\n      \n      console.log(`\u2705 Analyzed ${analyzedPapers.length} papers`);\n      \n      // Step 3: Cache results\n      console.log('\uD83D\uDCBE Caching results...');\n      await cachePapers(today, analyzedPapers, env);\n      \n      // Step 4: Generate daily report\n      console.log('\uD83D\uDCCA Generating daily report...');\n      const dailyReport = await generateDailyReport(analyzedPapers, today);\n      \n      console.log('\u2705 Daily report generated successfully!');\n      console.log(`\uD83D\uDCC8 Summary: ${analyzedPapers.length} papers processed, ${dailyReport.total_papers} total papers`);\n      \n      // Log statistics\n      const categories = {};\n      analyzedPapers.forEach(paper => {\n        const category = paper.analysis?.category || paper.category || 'other';\n        categories[category] = (categories[category] || 0) + 1;\n      });\n      \n      console.log('\uD83D\uDCC2 Category breakdown:', categories);\n      \n    } catch (error) {\n      console.error('\u274C Scheduled paper update failed:', error);\n    }\n  }\n};\n\n// Additional route handlers\nasync function handleArchive(request, env) {\n  try {\n    const url = new URL(request.url);\n    const page = parseInt(url.searchParams.get('page')) || 1;\n    const limit = parseInt(url.searchParams.get('limit')) || 12;\n    const category = url.searchParams.get('category');\n    const search = url.searchParams.get('search');\n    \n    // Get papers from the last 30 days\n    let allPapers = [];\n    for (let i = 0; i < 30; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      const papers = await env.PAPERS.get(`papers_${dateStr}`);\n      if (papers) {\n        const parsed = JSON.parse(papers);\n        allPapers.push(...parsed);\n      }\n    }\n    \n    // Apply filters\n    if (category) {\n      allPapers = allPapers.filter(p => \n        (p.analysis?.category || p.category || 'other') === category\n      );\n    }\n    \n    if (search) {\n      const searchLower = search.toLowerCase();\n      allPapers = allPapers.filter(p => \n        p.title.toLowerCase().includes(searchLower) ||\n        p.abstract.toLowerCase().includes(searchLower) ||\n        (p.authors && p.authors.some(a => a.toLowerCase().includes(searchLower)))\n      );\n    }\n    \n    // Import and use templates\n    const { getArchiveHTML } = await import('../src/templates.js');\n    const html = getArchiveHTML(allPapers, { page, limit, category, search });\n    \n    return new Response(html, {\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type',\n      }\n    });\n  } catch (error) {\n    console.error('Error in archive handler:', error);\n    return errorResponse(error.message, 500);\n  }\n}\n\nasync function handleReportByDate(request, env, date) {\n  try {\n    // Import validation function\n    const { validateDate, getCachedPapers } = await import('../src/utils.js');\n    const { generateDailyReport } = await import('../src/blog-generator.js');\n    const { getReportHTML } = await import('../src/templates.js');\n    \n    validateDate(date);\n    \n    const papers = await getCachedPapers(date, env);\n    if (!papers || papers.length === 0) {\n      return errorResponse('No papers found for this date', 404);\n    }\n    \n    const report = await generateDailyReport(papers, date);\n    const html = getReportHTML(report);\n    \n    return new Response(html, {\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type',\n      }\n    });\n  } catch (error) {\n    console.error('Error in report handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}", "import { routes } from './config.js';\nimport { \n  validateDate, \n  getCachedPapers, \n  cachePapers, \n  jsonResponse, \n  htmlResponse, \n  rssResponse, \n  errorResponse,\n  sortPapersByDate,\n  filterPapersByCategory,\n  searchPapers\n} from './utils.js';\nimport { scrapeDailyPapers } from './paper-scraper.js';\nimport { analyzePapers } from './paper-analyzer.js';\nimport { generateDailyReport, generateBlogContent, generateRSSFeed } from './blog-generator.js';\nimport { getIndexHTML, getArchiveHTML } from './templates.js';\nimport { getDualColumnHTML } from './dual-column-templates.js';\nimport { filterAndSortPapers, generateScoringReport } from './paper-scoring.js';\n\nconst logger = {\n  info: (msg, data = {}) => console.log(`[HANDLER] ${msg}`, data),\n  debug: (msg, data = {}) => console.log(`[HANDLER] ${msg}`, data),\n  warn: (msg, data = {}) => console.warn(`[HANDLER] ${msg}`, data),\n  error: (msg, data = {}) => console.error(`[HANDLER] ${msg}`, data)\n};\n\n// Route Handlers\nexport async function handleRoot(request, env) {\n  try {\n    const today = new Date().toISOString().split('T')[0];\n    const url = new URL(request.url);\n    \n    // Check for specific date parameter\n    const requestedDate = url.searchParams.get('date');\n    const targetDate = requestedDate || today;\n    \n    // Try to get cached papers\n    let papers = await getCachedPapers(targetDate, env);\n    let dailyReport = null;\n    \n    if (!papers) {\n      // If no papers for today, try to get recent papers\n      const recentDates = [];\n      for (let i = 0; i < 7; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        recentDates.push(date.toISOString().split('T')[0]);\n      }\n      \n      // Find the most recent date with papers\n      for (const date of recentDates) {\n        const cached = await getCachedPapers(date, env);\n        if (cached && cached.length > 0) {\n          papers = cached;\n          break;\n        }\n      }\n    }\n    \n    // Try to get daily report\n    if (papers && papers.length > 0) {\n      dailyReport = await generateDailyReport(papers, targetDate);\n    }\n    \n    return htmlResponse(getDualColumnHTML(papers || [], dailyReport));\n  } catch (error) {\n    logger.error('Error in root handler:', error);\n    return htmlResponse(getIndexHTML([], null));\n  }\n}\n\nexport async function handlePapersList(request, env) {\n  try {\n    const url = new URL(request.url);\n    const page = parseInt(url.searchParams.get('page')) || 1;\n    const limit = parseInt(url.searchParams.get('limit')) || 20;\n    const category = url.searchParams.get('category');\n    const search = url.searchParams.get('search');\n    const date = url.searchParams.get('date');\n    \n    let papers = [];\n    \n    if (date) {\n      validateDate(date);\n      papers = await getCachedPapers(date, env) || [];\n    } else {\n      // Get papers from the last 7 days\n      for (let i = 0; i < 7; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        const dateStr = date.toISOString().split('T')[0];\n        const cached = await getCachedPapers(dateStr, env);\n        if (cached) {\n          papers.push(...cached);\n        }\n      }\n    }\n    \n    // Apply filters\n    if (category) {\n      papers = filterPapersByCategory(papers, category);\n    }\n    \n    if (search) {\n      papers = searchPapers(papers, search);\n    }\n    \n    // Sort by date\n    papers = sortPapersByDate(papers);\n    \n    // Apply pagination\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n    const paginatedPapers = papers.slice(startIndex, endIndex);\n    \n    const response = {\n      papers: paginatedPapers,\n      pagination: {\n        current_page: page,\n        total_pages: Math.ceil(papers.length / limit),\n        total_papers: papers.length,\n        has_next: endIndex < papers.length,\n        has_prev: page > 1\n      },\n      filters: {\n        category: category,\n        search: search,\n        date: date\n      }\n    };\n    \n    return jsonResponse(response);\n  } catch (error) {\n    logger.error('Error in papers list handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handlePapersByDate(request, env, date) {\n  try {\n    validateDate(date);\n    \n    const papers = await getCachedPapers(date, env);\n    if (!papers) {\n      return errorResponse('No papers found for this date', 404);\n    }\n    \n    return jsonResponse({\n      date: date,\n      papers: papers,\n      total_papers: papers.length\n    });\n  } catch (error) {\n    logger.error('Error in papers by date handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handlePaperById(request, env, paperId) {\n  try {\n    // Try to find the paper in recent cached data\n    let paper = null;\n    \n    // Search through the last 7 days of cached papers\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      const papers = await getCachedPapers(dateStr, env);\n      \n      if (papers) {\n        paper = papers.find(p => p.id === paperId);\n        if (paper) break;\n      }\n    }\n    \n    if (!paper) {\n      return errorResponse('Paper not found', 404);\n    }\n    \n    return jsonResponse(paper);\n  } catch (error) {\n    logger.error('Error in paper by ID handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handleUpdatePapers(request, env) {\n  try {\n    // Check for API key\n    const apiKey = env.OPENROUTER_API_KEY;\n    if (!apiKey) {\n      return errorResponse('OpenRouter API key not configured', 503);\n    }\n    \n    const today = new Date().toISOString().split('T')[0];\n    \n    // Check rate limiting (simple implementation)\n    const clientIP = request.headers.get('CF-Connecting-IP') || 'unknown';\n    const rateLimitKey = `rate_limit_${clientIP}`;\n    const lastUpdate = await env.PAPERS.get(rateLimitKey);\n    \n    if (lastUpdate) {\n      const lastUpdateTime = parseInt(lastUpdate);\n      const timeSinceLastUpdate = Date.now() - lastUpdateTime;\n      const minInterval = 5 * 60 * 1000; // 5 minutes\n      \n      if (timeSinceLastUpdate < minInterval) {\n        return errorResponse('Please wait before requesting another update', 429);\n      }\n    }\n    \n    // Update rate limit\n    await env.PAPERS.put(rateLimitKey, Date.now().toString(), {\n      expirationTtl: 300 // 5 minutes\n    });\n    \n    logger.info('Starting manual paper update');\n    \n    // Step 1: Scrape papers\n    const scrapedPapers = await scrapeDailyPapers();\n    if (scrapedPapers.length === 0) {\n      return errorResponse('No papers could be scraped', 404);\n    }\n    \n    // Step 2: Analyze papers\n    const analyzedPapers = await analyzePapers(scrapedPapers, apiKey);\n    \n    // Step 3: Cache results\n    await cachePapers(today, analyzedPapers, env);\n    \n    // Step 4: Generate daily report\n    const dailyReport = await generateDailyReport(analyzedPapers, today);\n    \n    logger.info(`Successfully updated ${analyzedPapers.length} papers`);\n    \n    return jsonResponse({\n      success: true,\n      message: `Successfully updated ${analyzedPapers.length} papers`,\n      date: today,\n      papers_count: analyzedPapers.length,\n      report: dailyReport\n    });\n    \n  } catch (error) {\n    logger.error('Error in update papers handler:', error);\n    return errorResponse(`Update failed: ${error.message}`, error.statusCode || 500);\n  }\n}\n\nexport async function handleCategories(request, env) {\n  try {\n    // Get all categories from recent papers\n    const categories = new Set();\n    \n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      const papers = await getCachedPapers(dateStr, env);\n      \n      if (papers) {\n        papers.forEach(paper => {\n          const category = paper.analysis?.category || paper.category || 'other';\n          categories.add(category);\n        });\n      }\n    }\n    \n    const categoryList = Array.from(categories).sort();\n    \n    return jsonResponse({\n      categories: categoryList,\n      total_categories: categoryList.length\n    });\n  } catch (error) {\n    logger.error('Error in categories handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handleSearch(request, env) {\n  try {\n    const url = new URL(request.url);\n    const query = url.searchParams.get('q');\n    const category = url.searchParams.get('category');\n    const limit = parseInt(url.searchParams.get('limit')) || 20;\n    \n    if (!query || query.trim().length < 2) {\n      return errorResponse('Search query must be at least 2 characters', 400);\n    }\n    \n    // Search through recent papers\n    let allPapers = [];\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      const papers = await getCachedPapers(dateStr, env);\n      if (papers) {\n        allPapers.push(...papers);\n      }\n    }\n    \n    // Apply search and filters\n    let results = searchPapers(allPapers, query);\n    \n    if (category) {\n      results = filterPapersByCategory(results, category);\n    }\n    \n    // Sort by relevance score\n    results.sort((a, b) => {\n      const scoreA = a.analysis?.relevance_score || 5;\n      const scoreB = b.analysis?.relevance_score || 5;\n      return scoreB - scoreA;\n    });\n    \n    // Apply limit\n    results = results.slice(0, limit);\n    \n    return jsonResponse({\n      query: query,\n      results: results,\n      total_results: results.length,\n      filters: {\n        category: category\n      }\n    });\n  } catch (error) {\n    logger.error('Error in search handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handleRSSFeed(request, env) {\n  try {\n    // Get recent papers for RSS feed\n    let allPapers = [];\n    for (let i = 0; i < 3; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      const papers = await getCachedPapers(dateStr, env);\n      if (papers) {\n        allPapers.push(...papers);\n      }\n    }\n    \n    // Sort by date\n    allPapers = sortPapersByDate(allPapers);\n    \n    const rssFeed = generateRSSFeed(allPapers, {\n      title: 'PaperDog - AI Papers Daily',\n      description: 'Daily curated AI and computer vision research papers',\n      link: 'https://paperdog.org',\n      maxItems: 20\n    });\n    \n    return rssResponse(rssFeed);\n  } catch (error) {\n    logger.error('Error in RSS feed handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handleAbout(request, env) {\n  try {\n    const aboutHTML = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About - PaperDog</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        body { background: #f8f9fa; }\n        .about-header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 4rem 0;\n            margin-bottom: 3rem;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"about-header\">\n        <div class=\"container\">\n            <h1 class=\"display-4\">\n                <i class=\"fas fa-info-circle me-3\"></i>About PaperDog\n            </h1>\n            <p class=\"lead\">Your AI-powered research paper companion</p>\n        </div>\n    </div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 mx-auto\">\n                <div class=\"card mb-4\">\n                    <div class=\"card-body\">\n                        <h3><i class=\"fas fa-robot me-2\"></i>What is PaperDog?</h3>\n                        <p>PaperDog is an automated system that collects, analyzes, and presents the latest AI and computer vision research papers from top sources like arXiv and HuggingFace.</p>\n                    </div>\n                </div>\n                \n                <div class=\"card mb-4\">\n                    <div class=\"card-body\">\n                        <h3><i class=\"fas fa-cogs me-2\"></i>How It Works</h3>\n                        <ol>\n                            <li><strong>Daily Scraping:</strong> Automatically collects new papers from arXiv and HuggingFace</li>\n                            <li><strong>AI Analysis:</strong> Uses advanced language models to analyze each paper's content and relevance</li>\n                            <li><strong>Smart Curation:</strong> Filters and ranks papers based on quality and importance</li>\n                            <li><strong>Beautiful Presentation:</strong> Presents papers in an easy-to-read blog format</li>\n                        </ol>\n                    </div>\n                </div>\n                \n                <div class=\"card mb-4\">\n                    <div class=\"card-body\">\n                        <h3><i class=\"fas fa-bolt me-2\"></i>Features</h3>\n                        <ul>\n                            <li>Daily automated updates</li>\n                            <li>AI-powered paper analysis</li>\n                            <li>Smart categorization and tagging</li>\n                            <li>Search and filter capabilities</li>\n                            <li>RSS feed integration</li>\n                            <li>Responsive design for all devices</li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class=\"card mb-4\">\n                    <div class=\"card-body\">\n                        <h3><i class=\"fas fa-code me-2\"></i>Technical Details</h3>\n                        <p>Built with modern web technologies:</p>\n                        <ul>\n                            <li>Backend: Cloudflare Workers</li>\n                            <li>AI Analysis: OpenRouter API (GPT-4o, Gemini)</li>\n                            <li>Storage: Cloudflare KV</li>\n                            <li>Frontend: Bootstrap 5, HTML5, CSS3</li>\n                            <li>Deployment: Cloudflare Pages + Workers</li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class=\"text-center\">\n                    <a href=\"/\" class=\"btn btn-primary btn-lg me-3\">\n                        <i class=\"fas fa-home me-2\"></i>Back to Home\n                    </a>\n                    <a href=\"/api/papers\" class=\"btn btn-outline-secondary btn-lg\">\n                        <i class=\"fas fa-code me-2\"></i>View API\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n</body>\n</html>`;\n    \n    return htmlResponse(aboutHTML);\n  } catch (error) {\n    logger.error('Error in about handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\nexport async function handleScoringReport(request, env, date) {\n  try {\n    validateDate(date);\n    \n    const papers = await getCachedPapers(date, env);\n    if (!papers || papers.length === 0) {\n      return errorResponse('No papers found for this date', 404);\n    }\n    \n    // Generate scoring report\n    const scoringReport = generateScoringReport(papers);\n    \n    logger.info(`Generated scoring report for ${date} with ${papers.length} papers`);\n    \n    return jsonResponse({\n      date: date,\n      papers_count: papers.length,\n      scoring_report: scoringReport,\n      generated_at: new Date().toISOString()\n    });\n  } catch (error) {\n    logger.error('Error in scoring report handler:', error);\n    return errorResponse(error.message, error.statusCode || 500);\n  }\n}\n\n// Export all handlers for easy access\nexport const handlers = {\n  handleRoot,\n  handlePapersList,\n  handlePapersByDate,\n  handlePaperById,\n  handleUpdatePapers,\n  handleCategories,\n  handleSearch,\n  handleRSSFeed,\n  handleAbout,\n  handleScoringReport\n};", "import { PAPER_SOURCES, SOURCE_CONFIGS, AppError } from './config.js';\nimport { fetchWithTimeout, sleep } from './utils.js';\n\n// Simple logger for Worker environment\nconst logger = {\n  info: (msg, data = {}) => console.log(`[INFO] ${msg}`, data),\n  debug: (msg, data = {}) => console.log(`[DEBUG] ${msg}`, data),\n  warn: (msg, data = {}) => console.warn(`[WARN] ${msg}`, data),\n  error: (msg, data = {}) => console.error(`[ERROR] ${msg}`, data)\n};\n\nexport async function scrapeDailyPapers() {\n  const today = new Date().toISOString().split('T')[0];\n  logger.info(`Starting daily paper scraping for ${today}`);\n  \n  try {\n    // Scrape from both sources in parallel\n    const [arxivPapers, huggingfacePapers] = await Promise.allSettled([\n      scrapeArxivPapers(),\n      scrapeHuggingfacePapers()\n    ]);\n    \n    const allPapers = [];\n    \n    // Process arXiv results\n    if (arxivPapers.status === 'fulfilled' && arxivPapers.value.length > 0) {\n      logger.info(`Scraped ${arxivPapers.value.length} papers from arXiv`);\n      allPapers.push(...arxivPapers.value);\n    } else if (arxivPapers.status === 'rejected') {\n      logger.error('Failed to scrape arXiv papers:', { error: arxivPapers.reason.message });\n    }\n    \n    // Process HuggingFace results\n    if (huggingfacePapers.status === 'fulfilled' && huggingfacePapers.value.length > 0) {\n      logger.info(`Scraped ${huggingfacePapers.value.length} papers from HuggingFace`);\n      allPapers.push(...huggingfacePapers.value);\n    } else if (huggingfacePapers.status === 'rejected') {\n      logger.error('Failed to scrape HuggingFace papers:', { error: huggingfacePapers.reason.message });\n    }\n    \n    // Remove duplicates based on title similarity\n    const uniquePapers = removeDuplicatePapers(allPapers);\n    logger.info(`Total unique papers scraped: ${uniquePapers.length}`);\n    \n    return uniquePapers;\n  } catch (error) {\n    logger.error('Error in daily paper scraping:', error);\n    throw new AppError(`Failed to scrape daily papers: ${error.message}`);\n  }\n}\n\nasync function scrapeArxivPapers() {\n  const config = SOURCE_CONFIGS.arxiv;\n  const categories = PAPER_SOURCES.arxiv.categories;\n  const papers = [];\n  \n  logger.info(`Scraping arXiv papers from categories: ${categories.join(', ')}`);\n  \n  // Build query for all categories\n  const categoryQuery = categories.map(cat => `cat:${cat}`).join(' OR ');\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - config.dateRange);\n  const dateFilter = `submittedDate:[${yesterday.toISOString().split('T')[0]}*]`;\n  \n  const searchQuery = `${categoryQuery} AND ${dateFilter}`;\n  const encodedQuery = encodeURIComponent(searchQuery);\n  \n  const url = `${PAPER_SOURCES.arxiv.baseUrl}?search_query=${encodedQuery}&start=0&max_results=${config.maxPapersPerRequest}&sortBy=${PAPER_SOURCES.arxiv.sortBy}&sortOrder=${PAPER_SOURCES.arxiv.sortOrder}`;\n  \n  try {\n    const response = await fetchWithTimeout(url, 30000);\n    const xmlContent = await response.text();\n    \n    // Parse XML response\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlContent, 'text/xml');\n    const entries = xmlDoc.getElementsByTagName('entry');\n    \n    logger.info(`Found ${entries.length} entries in arXiv response`);\n    \n    for (let i = 0; i < entries.length; i++) {\n      try {\n        const entry = entries[i];\n        const paper = parseArxivEntry(entry);\n        if (paper) {\n          papers.push(paper);\n        }\n      } catch (error) {\n        logger.warn(`Failed to parse arXiv entry ${i}:`, { error: error.message });\n      }\n    }\n    \n    return papers;\n  } catch (error) {\n    logger.error('Error scraping arXiv:', error);\n    throw new AppError(`arXiv scraping failed: ${error.message}`);\n  }\n}\n\nfunction parseArxivEntry(entry) {\n  try {\n    const idElement = entry.getElementsByTagName('id')[0];\n    const titleElement = entry.getElementsByTagName('title')[0];\n    const summaryElement = entry.getElementsByTagName('summary')[0];\n    const publishedElement = entry.getElementsByTagName('published')[0];\n    const updatedElement = entry.getElementsByTagName('updated')[0];\n    const primaryCategoryElement = entry.getElementsByTagName('primary_category')[0];\n    \n    if (!titleElement || !summaryElement) {\n      logger.warn('Missing required fields in arXiv entry');\n      return null;\n    }\n    \n    // Extract authors\n    const authors = [];\n    const authorElements = entry.getElementsByTagName('author');\n    for (let j = 0; j < authorElements.length; j++) {\n      const nameElement = authorElements[j].getElementsByTagName('name')[0];\n      if (nameElement) {\n        authors.push(nameElement.textContent.trim());\n      }\n    }\n    \n    // Extract arXiv ID from URL\n    const id = idElement ? idElement.textContent.trim() : '';\n    const arxivId = id.includes('arxiv.org/abs/') ? id.split('arxiv.org/abs/')[1] : '';\n    \n    return {\n      id: `arxiv_${arxivId}`,\n      arxiv_id: arxivId,\n      title: titleElement.textContent.trim(),\n      abstract: summaryElement.textContent.trim(),\n      authors: authors,\n      published: publishedElement ? publishedElement.textContent : '',\n      updated: updatedElement ? updatedElement.textContent : '',\n      category: primaryCategoryElement ? primaryCategoryElement.getAttribute('term') : '',\n      source: 'arxiv',\n      url: id,\n      pdf_url: id.replace('/abs/', '/pdf/') + '.pdf',\n      scraped_at: new Date().toISOString()\n    };\n  } catch (error) {\n    logger.error('Error parsing arXiv entry:', error);\n    return null;\n  }\n}\n\nasync function scrapeHuggingfacePapers() {\n  const config = SOURCE_CONFIGS.huggingface;\n  const papers = [];\n  \n  logger.info('Scraping HuggingFace papers');\n  \n  try {\n    // HuggingFace doesn't have a public API for papers, so we'll scrape their papers page\n    const url = 'https://huggingface.co/papers';\n    const response = await fetchWithTimeout(url, 30000);\n    const htmlContent = await response.text();\n    \n    // Parse HTML to extract paper information\n    // This is a simplified approach - in production, you might want a more robust parser\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(htmlContent, 'text/html');\n    \n    // Find paper cards/elements (this selector may need adjustment based on actual HTML structure)\n    const paperElements = doc.querySelectorAll('.paper-card, [data-testid=\"paper-item\"], article');\n    \n    logger.info(`Found ${paperElements.length} paper elements on HuggingFace`);\n    \n    for (let i = 0; i < Math.min(paperElements.length, config.maxPapersPerRequest); i++) {\n      try {\n        const paper = parseHuggingfacePaper(paperElements[i]);\n        if (paper) {\n          papers.push(paper);\n        }\n      } catch (error) {\n        logger.warn(`Failed to parse HuggingFace paper ${i}:`, { error: error.message });\n      }\n      \n      // Add delay to avoid rate limiting\n      if (i < paperElements.length - 1) {\n        await sleep(config.requestDelay);\n      }\n    }\n    \n    return papers;\n  } catch (error) {\n    logger.error('Error scraping HuggingFace:', error);\n    throw new AppError(`HuggingFace scraping failed: ${error.message}`);\n  }\n}\n\nfunction parseHuggingfacePaper(element) {\n  try {\n    // Extract title\n    const titleElement = element.querySelector('h1, h2, h3, .paper-title, [data-testid=\"paper-title\"]');\n    const title = titleElement ? titleElement.textContent.trim() : '';\n    \n    if (!title) {\n      logger.warn('No title found in HuggingFace paper element');\n      return null;\n    }\n    \n    // Extract abstract\n    const abstractElement = element.querySelector('.paper-abstract, .abstract, .summary, p');\n    const abstract = abstractElement ? abstractElement.textContent.trim() : '';\n    \n    // Extract authors\n    const authors = [];\n    const authorElements = element.querySelectorAll('.author, .authors span, [data-testid=\"author\"]');\n    authorElements.forEach(authorEl => {\n      const authorName = authorEl.textContent.trim();\n      if (authorName) {\n        authors.push(authorName);\n      }\n    });\n    \n    // Extract link\n    const linkElement = element.querySelector('a[href*=\"/papers/\"]');\n    const link = linkElement ? linkElement.href : '';\n    \n    // Generate ID from title\n    const id = `hf_${title.replace(/[^a-zA-Z0-9]/g, '_').toLowerCase()}_${Date.now()}`;\n    \n    return {\n      id: id,\n      title: title,\n      abstract: abstract,\n      authors: authors,\n      published: new Date().toISOString().split('T')[0], // Default to today\n      updated: new Date().toISOString(),\n      category: 'computer-vision', // Default category\n      source: 'huggingface',\n      url: link.startsWith('http') ? link : `https://huggingface.co${link}`,\n      pdf_url: '', // HuggingFace may not provide direct PDF links\n      scraped_at: new Date().toISOString()\n    };\n  } catch (error) {\n    logger.error('Error parsing HuggingFace paper:', error);\n    return null;\n  }\n}\n\nfunction removeDuplicatePapers(papers) {\n  const seen = new Set();\n  const uniquePapers = [];\n  \n  for (const paper of papers) {\n    // Create a simple hash of the title for duplicate detection\n    const titleHash = paper.title.toLowerCase().replace(/[^a-z0-9]/g, '');\n    \n    if (!seen.has(titleHash)) {\n      seen.add(titleHash);\n      uniquePapers.push(paper);\n    } else {\n      logger.debug(`Removed duplicate paper: ${paper.title}`);\n    }\n  }\n  \n  return uniquePapers;\n}\n\n// Export individual scraping functions for testing\nexport { scrapeArxivPapers, scrapeHuggingfacePapers, parseArxivEntry, parseHuggingfacePaper };", "import { AppError, MODEL_CONFIG, MODEL_PARAMS, PAPER_ANALYSIS_PROMPT, TOPIC_CATEGORIES } from './config.js';\nimport { fetchWithTimeout, sleep } from './utils.js';\n\nconst logger = {\n  info: (msg, data = {}) => console.log(`[ANALYZER] ${msg}`, data),\n  debug: (msg, data = {}) => console.log(`[ANALYZER] ${msg}`, data),\n  warn: (msg, data = {}) => console.warn(`[ANALYZER] ${msg}`, data),\n  error: (msg, data = {}) => console.error(`[ANALYZER] ${msg}`, data)\n};\n\nexport async function analyzePapers(papers, apiKey) {\n  if (!apiKey) {\n    throw new AppError('OpenRouter API key is required for paper analysis');\n  }\n  \n  if (!papers || papers.length === 0) {\n    logger.warn('No papers to analyze');\n    return [];\n  }\n  \n  logger.info(`Starting analysis of ${papers.length} papers`);\n  \n  const analyzedPapers = [];\n  const BATCH_SIZE = 2; // Process papers in small batches to avoid rate limits\n  \n  for (let i = 0; i < papers.length; i += BATCH_SIZE) {\n    const batch = papers.slice(i, i + BATCH_SIZE);\n    logger.info(`Analyzing batch ${Math.floor(i / BATCH_SIZE) + 1}/${Math.ceil(papers.length / BATCH_SIZE)}`);\n    \n    const batchPromises = batch.map(paper => analyzeSinglePaper(paper, apiKey));\n    const batchResults = await Promise.allSettled(batchPromises);\n    \n    for (const result of batchResults) {\n      if (result.status === 'fulfilled' && result.value) {\n        analyzedPapers.push(result.value);\n      } else if (result.status === 'rejected') {\n        logger.error('Failed to analyze paper:', { error: result.reason.message });\n        // Add paper without analysis for fallback\n        const originalPaper = batch[batchResults.indexOf(result)];\n        if (originalPaper) {\n          analyzedPapers.push(createFallbackAnalysis(originalPaper));\n        }\n      }\n    }\n    \n    // Add delay between batches to avoid rate limiting\n    if (i + BATCH_SIZE < papers.length) {\n      await sleep(2000); // 2 second delay between batches\n    }\n  }\n  \n  logger.info(`Successfully analyzed ${analyzedPapers.length} papers`);\n  return analyzedPapers;\n}\n\nexport async function analyzeSinglePaper(paper, apiKey) {\n  try {\n    logger.debug(`Analyzing paper: ${paper.title}`);\n    \n    // Check if paper already has analysis (cached)\n    if (paper.analysis && paper.analysis.summary) {\n      logger.debug(`Paper ${paper.id} already has analysis, skipping`);\n      return paper;\n    }\n    \n    // Prepare analysis prompt\n    const prompt = PAPER_ANALYSIS_PROMPT\n      .replace('{title}', paper.title)\n      .replace('{authors}', paper.authors ? paper.authors.join(', ') : 'Unknown')\n      .replace('{abstract}', paper.abstract || 'No abstract available')\n      .replace('{published}', paper.published || 'Unknown');\n    \n    // Call LLM for analysis\n    const analysisResult = await callLLM(prompt, MODEL_CONFIG.analysis, MODEL_PARAMS.analysis, apiKey);\n    \n    // Parse the JSON response\n    const analysis = parseAnalysisResponse(analysisResult);\n    \n    // Add analysis to paper\n    const analyzedPaper = {\n      ...paper,\n      analysis: {\n        ...analysis,\n        analyzed_at: new Date().toISOString(),\n        model: MODEL_CONFIG.analysis\n      }\n    };\n    \n    logger.debug(`Successfully analyzed paper: ${paper.title}`);\n    return analyzedPaper;\n    \n  } catch (error) {\n    logger.error(`Failed to analyze paper ${paper.title}:`, error);\n    throw error; // Re-throw to be handled by the caller\n  }\n}\n\nasync function callLLM(prompt, model, params, apiKey) {\n  const url = 'https://openrouter.ai/api/v1/chat/completions';\n  \n  const requestBody = {\n    model: model,\n    messages: [\n      {\n        role: 'system',\n        content: 'You are an expert AI research analyst specializing in computer vision and machine learning. Provide detailed, accurate analysis of research papers.'\n      },\n      {\n        role: 'user',\n        content: prompt\n      }\n    ],\n    temperature: params.temperature || 0.3,\n    max_tokens: params.max_tokens || 1000,\n    response_format: { type: 'json_object' }\n  };\n  \n  try {\n    const response = await fetchWithTimeout(url, 60000); // 60 second timeout\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new AppError(`LLM API error: ${response.status} - ${errorText}`);\n    }\n    \n    const data = await response.json();\n    \n    if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n      throw new AppError('Invalid LLM response format');\n    }\n    \n    const content = data.choices[0].message.content;\n    if (!content) {\n      throw new AppError('Empty LLM response');\n    }\n    \n    return content;\n    \n  } catch (error) {\n    logger.error('LLM API call failed:', error);\n    throw error;\n  }\n}\n\nfunction parseAnalysisResponse(response) {\n  try {\n    // Clean the response to ensure it's valid JSON\n    let cleanResponse = response.trim();\n    \n    // Remove markdown code blocks if present\n    if (cleanResponse.startsWith('```json')) {\n      cleanResponse = cleanResponse.replace(/```json\\n?/, '').replace(/\\n?```$/, '');\n    } else if (cleanResponse.startsWith('```')) {\n      cleanResponse = cleanResponse.replace(/```\\n?/, '').replace(/\\n?```$/, '');\n    }\n    \n    const parsed = JSON.parse(cleanResponse);\n    \n    // Validate required fields\n    const requiredFields = ['introduction', 'challenges', 'innovations', 'experiments', 'insights', 'keywords', 'category'];\n    for (const field of requiredFields) {\n      if (!parsed[field]) {\n        logger.warn(`Missing field in analysis: ${field}`);\n        parsed[field] = field === 'keywords' ? [] : 'Not provided';\n      }\n    }\n    \n    // Validate category\n    if (!TOPIC_CATEGORIES.includes(parsed.category)) {\n      logger.warn(`Invalid category: ${parsed.category}, defaulting to 'machine_learning'`);\n      parsed.category = 'machine_learning';\n    }\n    \n    // Ensure keywords is an array\n    if (!Array.isArray(parsed.keywords)) {\n      parsed.keywords = typeof parsed.keywords === 'string' ? [parsed.keywords] : [];\n    }\n    \n    // Validate scores\n    if (typeof parsed.relevance_score !== 'number' || parsed.relevance_score < 1 || parsed.relevance_score > 10) {\n      parsed.relevance_score = 5; // Default score\n    }\n    \n    // Add summary field that combines all sections\n    parsed.summary = generateSummary(parsed);\n    \n    return parsed;\n    \n  } catch (error) {\n    logger.error('Failed to parse analysis response:', error);\n    throw new AppError(`Failed to parse analysis: ${error.message}`);\n  }\n}\n\nfunction generateSummary(analysis) {\n  const sections = [\n    { title: 'Introduction', content: analysis.introduction },\n    { title: 'Challenges', content: analysis.challenges },\n    { title: 'Innovations', content: analysis.innovations },\n    { title: 'Experiments', content: analysis.experiments },\n    { title: 'Insights', content: analysis.insights }\n  ];\n  \n  let summary = '';\n  let totalLength = 0;\n  const maxLength = 500;\n  \n  for (const section of sections) {\n    const sectionText = section.content.trim();\n    if (sectionText && sectionText !== 'Not provided') {\n      if (totalLength + sectionText.length + 50 <= maxLength) {\n        summary += `**${section.title}:** ${sectionText}\\n\\n`;\n        totalLength += sectionText.length + 50;\n      } else {\n        // Add truncated version if we're approaching the limit\n        const remainingSpace = maxLength - totalLength - 50;\n        if (remainingSpace > 50) {\n          summary += `**${section.title}:** ${sectionText.substring(0, remainingSpace)}...\\n\\n`;\n        }\n        break;\n      }\n    }\n  }\n  \n  return summary.trim() || 'Analysis not available';\n}\n\nfunction createFallbackAnalysis(paper) {\n  // Create a basic analysis for papers that couldn't be processed by LLM\n  return {\n    ...paper,\n    analysis: {\n      introduction: 'Analysis not available due to processing error.',\n      challenges: 'Not analyzed',\n      innovations: 'Not analyzed',\n      experiments: 'Not analyzed',\n      insights: 'Not analyzed',\n      summary: paper.abstract ? `Abstract: ${paper.abstract.substring(0, 300)}...` : 'No abstract available',\n      keywords: extractKeywords(paper),\n      category: inferCategory(paper),\n      relevance_score: 5,\n      technical_depth: 'unknown',\n      analyzed_at: new Date().toISOString(),\n      model: 'fallback',\n      error: true\n    }\n  };\n}\n\nfunction extractKeywords(paper) {\n  const text = `${paper.title} ${paper.abstract}`.toLowerCase();\n  const keywords = [];\n  \n  // Simple keyword extraction based on common AI/ML terms\n  const aiTerms = [\n    'neural network', 'deep learning', 'machine learning', 'computer vision',\n    'natural language processing', 'transformer', 'attention', 'gpt', 'bert',\n    'diffusion model', 'generative ai', 'reinforcement learning', 'cnn',\n    'rnn', 'lstm', 'gradient descent', 'backpropagation', 'fine-tuning',\n    'pretraining', 'transfer learning', 'multi-modal', 'vision transformer',\n    'segmentation', 'detection', 'classification', 'regression'\n  ];\n  \n  for (const term of aiTerms) {\n    if (text.includes(term) && !keywords.includes(term)) {\n      keywords.push(term);\n      if (keywords.length >= 5) break;\n    }\n  }\n  \n  return keywords;\n}\n\nfunction inferCategory(paper) {\n  const text = `${paper.title} ${paper.abstract} ${paper.category || ''}`.toLowerCase();\n  \n  if (text.includes('vision') || text.includes('image') || text.includes('visual')) {\n    return 'computer_vision';\n  } else if (text.includes('nlp') || text.includes('language') || text.includes('text')) {\n    return 'natural_language_processing';\n  } else if (text.includes('reinforcement') || text.includes('rl') || text.includes('agent')) {\n    return 'reinforcement_learning';\n  } else {\n    return 'machine_learning';\n  }\n}\n\nexport async function generatePaperSummary(paper, apiKey) {\n  if (!paper.analysis || !paper.analysis.summary) {\n    throw new AppError('Paper analysis is required for summary generation');\n  }\n  \n  const prompt = `Create a concise, engaging summary (under 200 words) of this AI research paper for a blog audience:\n\n**Title:** ${paper.title}\n**Authors:** ${paper.authors ? paper.authors.join(', ') : 'Unknown'}\n\n**Analysis:**\n${paper.analysis.summary}\n\n**Key Points:**\n- **Innovation:** ${paper.analysis.innovations}\n- **Results:** ${paper.analysis.experiments}\n- **Impact:** ${paper.analysis.insights}\n\nFormat the summary to be engaging and accessible to AI enthusiasts while maintaining technical accuracy.`;\n\n  try {\n    const summaryResult = await callLLM(prompt, MODEL_CONFIG.summary, MODEL_PARAMS.summary, apiKey);\n    return summaryResult.trim();\n  } catch (error) {\n    logger.error('Failed to generate paper summary:', error);\n    return paper.analysis.summary; // Fallback to existing summary\n  }\n}", "import { formatDate } from './utils.js';\n\nexport function getDualColumnHTML(papers = [], dailyReport = null) {\n  const safeReportJson = JSON.stringify(dailyReport).replace(/</g, '\\u003c');\n  \n  return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>PaperDog - AI Papers Daily Digest</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        body {\n            background: #f8f9fa;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n        \n        .container-fluid {\n            max-width: 1600px;\n        }\n        \n        .navbar {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        }\n        \n        .column-content {\n            min-height: 600px;\n            padding: 1.5rem;\n            background: #f6f8fc;\n            border-radius: 8px;\n            margin-bottom: 1rem;\n            border: 1px solid #e9ecef;\n        }\n        \n        #paper-content, #analysis-content {\n            overflow-wrap: break-word;\n            word-wrap: break-word;\n            font-size: 0.95em;\n            line-height: 1.6;\n        }\n        \n        #paper-content h1, #paper-content h2, #paper-content h3,\n        #analysis-content h1, #analysis-content h2, #analysis-content h3 {\n            font-size: 1.15em;\n            margin-top: 1.2rem;\n            margin-bottom: 0.5rem;\n            color: #2c3e50;\n        }\n        \n        #paper-content table, #analysis-content table {\n            width: 100%;\n            table-layout: fixed;\n            font-size: 0.9em;\n        }\n        \n        #paper-content pre, #analysis-content pre,\n        #paper-content code, #analysis-content code {\n            font-size: 0.85em;\n            overflow-x: auto;\n            background: #f8f9fa;\n            padding: 0.2rem 0.4rem;\n            border-radius: 4px;\n        }\n        \n        .side-panel {\n            background: #f6f8fc;\n            border-radius: 12px;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.03);\n            padding: 1.5rem 1rem;\n            min-height: 100%;\n            max-height: 80vh;\n            overflow-y: auto;\n            border: 1px solid #e9ecef;\n        }\n        \n        .paper-card {\n            transition: box-shadow 0.2s;\n            cursor: pointer;\n            border: 1px solid #dee2e6;\n        }\n        \n        .paper-card:hover {\n            box-shadow: 0 2px 12px rgba(0,0,0,0.08);\n            border-color: #667eea;\n        }\n        \n        .paper-card.today {\n            border-color: #007bff;\n            background: #f8f9ff;\n        }\n        \n        .paper-abstract {\n            font-size: 0.85em;\n            color: #6c757d;\n            line-height: 1.4;\n            max-height: 3.2em;\n            overflow: hidden;\n            display: -webkit-box;\n            -webkit-line-clamp: 2;\n            -webkit-box-orient: vertical;\n        }\n        \n        .update-btn {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            border: none;\n            border-radius: 8px;\n            padding: 0.75rem 1rem;\n            font-weight: 500;\n            transition: all 0.3s ease;\n        }\n        \n        .update-btn:hover:not(:disabled) {\n            transform: translateY(-2px);\n            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n        }\n        \n        .update-btn:disabled {\n            background: #6c757d;\n        }\n        \n        .spinner {\n            border: 4px solid rgba(0, 0, 0, 0.1);\n            border-left-color: #007bff;\n            border-radius: 50%;\n            width: 30px;\n            height: 30px;\n            animation: spin 1s linear infinite;\n            margin: 10px auto;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .loading-indicator {\n            display: none;\n            text-align: center;\n            padding: 1rem;\n        }\n        \n        @media (max-width: 1200px) {\n            .container-fluid {\n                max-width: 100%;\n                padding: 0 1rem;\n            }\n            .col-md-3, .col-md-6 {\n                flex: 0 0 100%;\n                max-width: 100%;\n            }\n            .side-panel {\n                max-height: none;\n                margin-top: 1rem;\n            }\n        }\n        \n        @media (max-width: 768px) {\n            .column-content, .side-panel {\n                padding: 1rem 0.5rem;\n                min-height: unset;\n            }\n            .container-fluid {\n                padding: 0;\n            }\n            .row {\n                flex-direction: column;\n            }\n        }\n        \n        .score-badge {\n            background: #28a745;\n            color: white;\n            padding: 0.25rem 0.5rem;\n            border-radius: 12px;\n            font-size: 0.75rem;\n            font-weight: 500;\n        }\n        \n        .category-badge {\n            background: #667eea;\n            color: white;\n            padding: 0.25rem 0.5rem;\n            border-radius: 12px;\n            font-size: 0.75rem;\n            font-weight: 500;\n        }\n        \n        .paper-stats {\n            font-size: 0.8rem;\n            color: #6c757d;\n        }\n    </style>\n</head>\n<body>\n    <nav class=\"navbar navbar-dark\">\n        <div class=\"container-fluid\">\n            <span class=\"navbar-brand mb-0 h1\">\n                <i class=\"fas fa-graduation-cap me-2\"></i>PaperDog\n            </span>\n            <span class=\"navbar-text\">\n                Daily AI Papers Digest\n            </span>\n        </div>\n    </nav>\n    \n    <div class=\"container-fluid mt-3\">\n        <div class=\"row gx-4 gy-3\">\n            <div class=\"col-md-9\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"column-content\">\n                            <h3 class=\"mb-3\">\n                                <i class=\"fas fa-file-alt me-2\"></i>\u8BBA\u6587\u8BE6\u60C5\n                            </h3>\n                            <div id=\"paper-content\">\n                                <div class=\"text-center text-muted py-5\">\n                                    <i class=\"fas fa-mouse-pointer fa-2x mb-3\"></i>\n                                    <h5>\u9009\u62E9\u4E00\u7BC7\u8BBA\u6587</h5>\n                                    <p>\u70B9\u51FB\u53F3\u4FA7\u7684\u8BBA\u6587\u5217\u8868\u67E5\u770B\u8BE6\u7EC6\u5185\u5BB9</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"column-content\">\n                            <h3 class=\"mb-3\">\n                                <i class=\"fas fa-brain me-2\"></i>AI Analysis\n                            </h3>\n                            <div id=\"analysis-content\">\n                                <div class=\"text-center text-muted py-5\">\n                                    <i class=\"fas fa-robot fa-2x mb-3\"></i>\n                                    <h5>AI\u5206\u6790\u5185\u5BB9</h5>\n                                    <p>\u9009\u62E9\u8BBA\u6587\u540E\u663E\u793AAI\u667A\u80FD\u5206\u6790\u7ED3\u679C</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"side-panel\">\n                    <h4 class=\"mb-3\">\n                        <i class=\"fas fa-list me-2\"></i>\u8BBA\u6587\u5217\u8868\n                    </h4>\n                    <button id=\"update-btn\" class=\"btn update-btn btn-primary mb-3 w-100\" onclick=\"updatePapers()\">\n                        <i class=\"fas fa-sync-alt me-2\"></i>Update Papers\n                    </button>\n                    <div class=\"loading-indicator\" id=\"loadingIndicator\">\n                        <div class=\"spinner\"></div>\n                        <p class=\"text-muted mb-0\">Updating papers...</p>\n                    </div>\n                    <div id=\"papers-list\">\u52A0\u8F7D\u4E2D...</div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const report = ${safeReportJson};\n            \n            // Initialize with today's papers if available\n            if (report && report.papers && report.papers.length > 0) {\n                loadPapersList(report.papers);\n                \n                // Auto-select the top paper\n                if (report.top_papers && report.top_papers.length > 0) {\n                    loadPaperContent(report.top_papers[0]);\n                }\n            } else {\n                // Fetch papers from API\n                fetchPapers();\n            }\n        });\n        \n        async function fetchPapers() {\n            const listContainer = document.getElementById('papers-list');\n            const loadingIndicator = document.getElementById('loadingIndicator');\n            \n            try {\n                loadingIndicator.style.display = 'block';\n                listContainer.innerHTML = '';\n                \n                // Try to get today's papers first\n                const today = new Date().toISOString().split('T')[0];\n                const response = await fetch('/api/papers/' + today);\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    if (data.papers && data.papers.length > 0) {\n                        loadPapersList(data.papers);\n                        loadingIndicator.style.display = 'none';\n                        return;\n                    }\n                }\n                \n                // Fallback to recent papers\n                const recentResponse = await fetch('/api/papers?limit=20');\n                if (recentResponse.ok) {\n                    const data = await recentResponse.json();\n                    loadPapersList(data.papers || []);\n                } else {\n                    listContainer.innerHTML = '<p class=\"text-muted\">\u6682\u65E0\u8BBA\u6587\u6570\u636E</p>';\n                }\n            } catch (error) {\n                console.error('Error fetching papers:', error);\n                listContainer.innerHTML = '<p class=\"text-danger\">\u52A0\u8F7D\u8BBA\u6587\u51FA\u9519</p>';\n            } finally {\n                loadingIndicator.style.display = 'none';\n            }\n        }\n        \n        function loadPapersList(papers) {\n            const listContainer = document.getElementById('papers-list');\n            \n            if (papers.length === 0) {\n                listContainer.innerHTML = '<p class=\"text-muted\">\u6682\u65E0\u8BBA\u6587\u6570\u636E</p>';\n                return;\n            }\n            \n            // Sort by relevance score and date\n            papers.sort((a, b) => {\n                const scoreA = (a.analysis?.relevance_score || a.scoring?.total_score || 5);\n                const scoreB = (b.analysis?.relevance_score || b.scoring?.total_score || 5);\n                if (Math.abs(scoreA - scoreB) > 0.5) return scoreB - scoreA;\n                return new Date(b.published || b.scraped_at) - new Date(a.published || a.scraped_at);\n            });\n            \n            const papersHTML = papers.map((paper, index) => {\n                const totalScore = paper.scoring?.total_score || paper.analysis?.relevance_score || 5;\n                const category = paper.analysis?.category || paper.category || 'other';\n                const isTopPaper = totalScore >= 7.0;\n                \n                return '<div class=\"card paper-card mb-2\" onclick=\"loadPaperContent(' + index + ')\">' +\n                    '<div class=\"card-body py-2 px-3\">' +\n                    '<h6 class=\"card-title mb-1\">' +\n                    (isTopPaper ? '<i class=\"fas fa-trophy text-warning me-1\"></i>' : '') +\n                    paper.title.substring(0, 60) + (paper.title.length > 60 ? '...' : '') +\n                    '</h6>' +\n                    '<p class=\"paper-abstract mb-1\">' + (paper.abstract || 'No abstract').substring(0, 80) + '...</p>' +\n                    '<div class=\"d-flex justify-content-between align-items-center\">' +\n                    '<div>' +\n                    '<span class=\"category-badge me-2\">' + category.replace('_', ' ') + '</span>' +\n                    '<span class=\"score-badge\">' + totalScore.toFixed(1) + '/10</span>' +\n                    '</div>' +\n                    '<small class=\"paper-stats\">' + paper.source + '</small>' +\n                    '</div>' +\n                    '</div>' +\n                    '</div>';\n            }).join('');\n            \n            listContainer.innerHTML = papersHTML;\n            \n            // Store papers for content loading\n            window.currentPapers = papers;\n        }\n        \n        function loadPaperContent(index) {\n            const paper = window.currentPapers[index];\n            if (!paper) return;\n            \n            // Load paper details\n            const paperContent = generatePaperDetails(paper);\n            document.getElementById('paper-content').innerHTML = paperContent;\n            \n            // Load AI analysis\n            const analysisContent = generateAIAnalysis(paper);\n            document.getElementById('analysis-content').innerHTML = analysisContent;\n            \n            // Highlight selected paper\n            document.querySelectorAll('.paper-card').forEach((card, i) => {\n                if (i === index) {\n                    card.classList.add('border-primary', 'bg-light');\n                } else {\n                    card.classList.remove('border-primary', 'bg-light');\n                }\n            });\n        }\n        \n        function generatePaperDetails(paper) {\n            const publishedDate = paper.published ? new Date(paper.published).toLocaleDateString() : 'Unknown';\n            const authors = paper.authors ? paper.authors.slice(0, 5).join(', ') + (paper.authors.length > 5 ? ' et al.' : '') : 'Unknown authors';\n            const category = paper.analysis?.category || paper.category || 'other';\n            const totalScore = paper.scoring?.total_score || paper.analysis?.relevance_score || 5;\n            \n            let html = '<h5>' + paper.title + '</h5>';\n            html += '<div class=\"mb-3\">';\n            html += '<p class=\"text-muted mb-1\"><strong>Authors:</strong> ' + authors + '</p>';\n            html += '<p class=\"text-muted mb-1\"><strong>Published:</strong> ' + publishedDate + '</p>';\n            html += '<p class=\"text-muted mb-1\"><strong>Source:</strong> ' + paper.source + '</p>';\n            html += '<p class=\"text-muted mb-1\"><strong>Category:</strong> ' + category.replace('_', ' ') + '</p>';\n            html += '<p class=\"text-muted mb-1\"><strong>Score:</strong> <span class=\"badge bg-success\">' + totalScore.toFixed(1) + '/10</span></p>';\n            html += '</div>';\n            \n            if (paper.abstract) {\n                html += '<h6>Abstract</h6>';\n                html += '<p>' + paper.abstract + '</p>';\n            }\n            \n            html += '<div class=\"mt-3\">';\n            html += '<a href=\"' + paper.url + '\" target=\"_blank\" class=\"btn btn-primary btn-sm me-2\">';\n            html += '<i class=\"fas fa-external-link-alt me-1\"></i>View Paper</a>';\n            if (paper.pdf_url) {\n                html += '<a href=\"' + paper.pdf_url + '\" target=\"_blank\" class=\"btn btn-danger btn-sm\">';\n                html += '<i class=\"fas fa-file-pdf me-1\"></i>PDF</a>';\n            }\n            html += '</div>';\n            \n            return html;\n        }\n        \n        function generateAIAnalysis(paper) {\n            if (!paper.analysis) {\n                return '<div class=\"text-center text-muted py-5\">' +\n                    '<i class=\"fas fa-robot fa-2x mb-3\"></i>' +\n                    '<h5>No AI Analysis Available</h5>' +\n                    '<p>This paper has not been analyzed by AI yet.</p>' +\n                    '</div>';\n            }\n            \n            const analysis = paper.analysis;\n            let html = '';\n            \n            if (analysis.introduction) {\n                html += '<h6>Introduction</h6>';\n                html += '<p>' + analysis.introduction + '</p>';\n            }\n            \n            if (analysis.challenges) {\n                html += '<h6>Key Challenges</h6>';\n                html += '<p>' + analysis.challenges + '</p>';\n            }\n            \n            if (analysis.innovations) {\n                html += '<h6>Innovations & Contributions</h6>';\n                html += '<p>' + analysis.innovations + '</p>';\n            }\n            \n            if (analysis.experiments) {\n                html += '<h6>Experiments & Results</h6>';\n                html += '<p>' + analysis.experiments + '</p>';\n            }\n            \n            if (analysis.insights) {\n                html += '<h6>Insights & Future Directions</h6>';\n                html += '<p>' + analysis.insights + '</p>';\n            }\n            \n            if (analysis.keywords && analysis.keywords.length > 0) {\n                html += '<h6>Keywords</h6>';\n                html += '<div class=\"mb-2\">';\n                analysis.keywords.forEach(keyword => {\n                    html += '<span class=\"badge bg-secondary me-1 mb-1\">' + keyword + '</span>';\n                });\n                html += '</div>';\n            }\n            \n            if (analysis.relevance_score) {\n                html += '<div class=\"mt-3 p-2 bg-light rounded\">';\n                html += '<strong>Relevance Score:</strong> ' + analysis.relevance_score + '/10<br>';\n                html += '<strong>Technical Depth:</strong> ' + (analysis.technical_depth || 'Unknown');\n                html += '</div>';\n            }\n            \n            return html || '<p class=\"text-muted\">No analysis details available.</p>';\n        }\n        \n        async function updatePapers() {\n            const button = document.getElementById('update-btn');\n            const loadingIndicator = document.getElementById('loadingIndicator');\n            \n            button.disabled = true;\n            button.innerHTML = '<i class=\"fas fa-spinner fa-spin me-2\"></i>Updating...';\n            loadingIndicator.style.display = 'block';\n            \n            try {\n                const response = await fetch('/api/update', { method: 'POST' });\n                const result = await response.json();\n                \n                if (result.success) {\n                    // Refresh papers list\n                    await fetchPapers();\n                    \n                    // Show success message\n                    const originalText = button.innerHTML;\n                    button.innerHTML = '<i class=\"fas fa-check me-2\"></i>Updated!';\n                    button.className = 'btn btn-success mb-3 w-100';\n                    \n                    setTimeout(() => {\n                        button.innerHTML = originalText;\n                        button.className = 'btn update-btn btn-primary mb-3 w-100';\n                        button.disabled = false;\n                    }, 2000);\n                } else {\n                    throw new Error(result.error || 'Update failed');\n                }\n            } catch (error) {\n                console.error('Error updating papers:', error);\n                \n                // Show error message\n                button.innerHTML = '<i class=\"fas fa-exclamation-triangle me-2\"></i>Update Failed';\n                button.className = 'btn btn-danger mb-3 w-100';\n                \n                setTimeout(() => {\n                    button.innerHTML = '<i class=\"fas fa-sync-alt me-2\"></i>Update Papers';\n                    button.className = 'btn update-btn btn-primary mb-3 w-100';\n                    button.disabled = false;\n                }, 2000);\n            } finally {\n                loadingIndicator.style.display = 'none';\n            }\n        }\n    </script>\n</body>\n</html>`;\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["logger", "logger", "papers", "description", "logger", "extractKeywords", "logger", "date", "getArchiveHTML", "validateDate", "getCachedPapers", "generateDailyReport", "getReportHTML"]
}
